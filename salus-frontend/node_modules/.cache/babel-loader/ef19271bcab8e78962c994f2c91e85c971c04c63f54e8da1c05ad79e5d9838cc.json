{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\39338\\\\salus\\\\salus-frontend\\\\src\\\\AIAssistant.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport API from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AIAssistant({\n  userId\n}) {\n  _s();\n  const [userMessage, setUserMessage] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [userProfile, setUserProfile] = useState(null);\n  const [userSymptoms, setUserSymptoms] = useState([]);\n  const [showIntro, setShowIntro] = useState(true);\n  const [suggestedQuestions, setSuggestedQuestions] = useState([\"Come posso alleviare il mal di testa?\", \"Quali sono i sintomi più comuni dell'influenza?\", \"Dovresti consultare un medico per mal di stomaco persistente?\", \"Come posso migliorare la qualità del sonno?\", \"Quali sono i benefici dell'esercizio fisico regolare?\"]);\n  const messagesEndRef = useRef(null);\n  const chatContainerRef = useRef(null);\n\n  // Messaggio di benvenuto\n  const welcomeMessage = {\n    role: 'assistant',\n    content: 'Ciao, sono Salus. Posso aiutarti a comprendere meglio il tuo stato di salute e rispondere alle tue domande. Come posso esserti utile oggi?'\n  };\n\n  // Carica i dati dell'utente all'avvio\n  useEffect(() => {\n    if (userId) {\n      fetchUserData();\n      fetchUserSymptoms();\n\n      // Carica la conversazione precedente dal localStorage\n      const savedConversation = localStorage.getItem(`aiConversation_${userId}`);\n      if (savedConversation) {\n        try {\n          setConversation(JSON.parse(savedConversation));\n          setShowIntro(false);\n        } catch (e) {\n          console.error('Errore nel parsing della conversazione salvata:', e);\n        }\n      }\n    }\n  }, [userId]);\n\n  // Salva la conversazione nel localStorage quando cambia\n  useEffect(() => {\n    if (userId && conversation.length > 0) {\n      localStorage.setItem(`aiConversation_${userId}`, JSON.stringify(conversation));\n    }\n  }, [conversation, userId]);\n\n  // Scroll automatico alla fine della conversazione\n  useEffect(() => {\n    scrollToBottom();\n  }, [conversation, isLoading]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const fetchUserData = async () => {\n    try {\n      const response = await API.get(`/auth/users/${userId}`);\n      setUserProfile(response.data);\n    } catch (error) {\n      console.error('Errore nel caricamento del profilo:', error);\n      showErrorToast('Impossibile caricare il profilo utente');\n    }\n  };\n  const fetchUserSymptoms = async () => {\n    try {\n      const response = await API.get(`/symptoms/${userId}`);\n      setUserSymptoms(response.data);\n\n      // Genera domande suggerite in base ai sintomi\n      if (response.data.length > 0) {\n        generateSuggestedQuestions(response.data);\n      }\n    } catch (error) {\n      console.error('Errore nel caricamento dei sintomi:', error);\n      showErrorToast('Impossibile caricare i sintomi');\n    }\n  };\n  const generateSuggestedQuestions = symptoms => {\n    if (symptoms.length === 0) return;\n\n    // Prendi i sintomi più recenti\n    const recentSymptoms = symptoms.slice(0, 3);\n\n    // Genera domande personalizzate\n    const customQuestions = recentSymptoms.map(symptom => `Come posso gestire il mio ${symptom.description.toLowerCase()}?`);\n\n    // Aggiungi domande generali\n    const generalQuestions = [\"Quali sono i pattern nei miei sintomi?\", \"Dovrei essere preoccupato per questi sintomi?\", \"Cosa posso fare per migliorare il mio benessere generale?\"];\n    setSuggestedQuestions([...customQuestions, ...generalQuestions].slice(0, 5));\n  };\n  const handleSuggestedQuestionClick = question => {\n    setUserMessage(question);\n    sendMessageToAI(question);\n  };\n  const sendMessageToAI = async (messageToSend = null) => {\n    const messageText = messageToSend || userMessage;\n    if (!messageText.trim() && !isLoading) return;\n\n    // Aggiungi il messaggio utente alla conversazione\n    const newUserMessage = {\n      role: 'user',\n      content: messageText\n    };\n    const updatedConversation = [...conversation, newUserMessage];\n    setConversation(updatedConversation);\n    if (!messageToSend) setUserMessage('');\n    setShowIntro(false);\n\n    // Prepara il contesto per OpenAI\n    setIsLoading(true);\n    try {\n      // Animazione di \"sta scrivendo\"\n      setTimeout(() => {\n        scrollToBottom();\n      }, 100);\n\n      // Versione semplificata della chiamata API\n      const response = await API.post('/ai/chat', {\n        message: newUserMessage.content\n      });\n\n      // Se c'è una risposta, aggiungila alla conversazione\n      if (response.data && response.data.reply) {\n        // Aggiungi la risposta alla conversazione\n        setConversation([...updatedConversation, {\n          role: 'assistant',\n          content: response.data.reply\n        }]);\n      } else {\n        throw new Error('Risposta AI non valida');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Errore nella chiamata AI:', error);\n      setConversation([...updatedConversation, {\n        role: 'assistant',\n        content: 'Mi dispiace, si è verificato un errore nella comunicazione. Riprova più tardi o controlla la tua connessione Internet.',\n        error: true\n      }]);\n      showErrorToast('Errore nella comunicazione con l\\'assistente: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n    } finally {\n      setIsLoading(false);\n      setTimeout(() => {\n        scrollToBottom();\n      }, 100);\n    }\n  };\n\n  // Prepara il contesto con i dati dell'utente\n  const prepareContext = () => {\n    const recentSymptoms = userSymptoms.slice(0, 5);\n    return {\n      profile: userProfile,\n      recentSymptoms: recentSymptoms,\n      symptomSummary: summarizeSymptoms(userSymptoms)\n    };\n  };\n\n  // Crea un riepilogo dei sintomi\n  const summarizeSymptoms = symptoms => {\n    const symptomsGrouped = {};\n    symptoms.forEach(s => {\n      if (!symptomsGrouped[s.description]) {\n        symptomsGrouped[s.description] = [];\n      }\n      symptomsGrouped[s.description].push(s.intensity);\n    });\n    return Object.keys(symptomsGrouped).map(desc => ({\n      description: desc,\n      avgIntensity: calculateAverage(symptomsGrouped[desc]),\n      occurrences: symptomsGrouped[desc].length\n    }));\n  };\n  const calculateAverage = arr => {\n    return arr.reduce((a, b) => a + b, 0) / arr.length;\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessageToAI();\n    }\n  };\n  const useSuggestedQuestion = question => {\n    var _document$getElementB;\n    setUserMessage(question);\n    // Focus all'input\n    (_document$getElementB = document.getElementById('messageInput')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.focus();\n  };\n  const showErrorToast = message => {\n    // Implementazione semplice di un toast di errore\n    const toast = document.createElement('div');\n    toast.className = 'error-toast';\n    toast.textContent = message;\n    document.body.appendChild(toast);\n    setTimeout(() => {\n      toast.classList.add('fade-out');\n      setTimeout(() => {\n        document.body.removeChild(toast);\n      }, 300);\n    }, 3000);\n  };\n  const clearConversation = () => {\n    if (window.confirm('Sei sicuro di voler cancellare tutta la conversazione?')) {\n      setConversation([]);\n      setShowIntro(true);\n      localStorage.removeItem(`aiConversation_${userId}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-assistant-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-identity\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/logo.png\",\n          alt: \"Salus Logo\",\n          className: \"salus-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Salus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      ref: chatContainerRef,\n      children: [showIntro && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"intro-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/logo.png\",\n          alt: \"Salus Logo\",\n          className: \"salus-logo-large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Benvenuto nel tuo assistente personale Salus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Posso aiutarti a comprendere meglio la tua salute e rispondere alle tue domande. Basandomi sui dati che hai inserito, ti offrir\\xF2 consigli personalizzati.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: [conversation.length === 0 && !showIntro && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message assistant-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/logo.png\",\n              alt: \"Salus Logo\",\n              className: \"salus-avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: welcomeMessage.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), conversation.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`,\n          children: [message.role === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/logo.png\",\n              alt: \"Salus Logo\",\n              className: \"salus-avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-content ${message.error ? 'error' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message assistant-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/logo.png\",\n              alt: \"Salus Logo\",\n              className: \"salus-avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"powered-by\",\n      children: [\"Powered by \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"brand\",\n        children: \"OpenAI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 20\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-bolt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .ai-assistant-container {\n          padding: var(--space-2);\n        }\n        \n        .ai-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: var(--space-4);\n        }\n        \n        .ai-identity {\n          display: flex;\n          align-items: center;\n          gap: var(--space-2);\n        }\n        \n        .salus-logo {\n          width: 48px;\n          height: 48px;\n        }\n        \n        .salus-logo-large {\n          width: 120px;\n          height: 120px;\n        }\n        \n        .chat-container {\n          display: flex;\n          flex-direction: column;\n          height: 60vh;\n          min-height: 400px;\n          border-radius: var(--radius-lg);\n          overflow: hidden;\n          background-color: var(--gray-100);\n          box-shadow: var(--shadow-md);\n          border: 1px solid var(--gray-200);\n        }\n        \n        .messages-container {\n          flex: 1;\n          overflow-y: auto;\n          padding: var(--space-4);\n          display: flex;\n          flex-direction: column;\n          gap: var(--space-3);\n        }\n        \n        .message {\n          display: flex;\n          max-width: 85%;\n          margin-bottom: var(--space-3);\n          animation: fadeIn 0.3s ease;\n        }\n        \n        .user-message {\n          margin-left: auto;\n          flex-direction: row-reverse;\n        }\n        \n        .assistant-message {\n          margin-right: auto;\n        }\n        \n        .message-avatar {\n          width: 36px;\n          height: 36px;\n          border-radius: 50%;\n          background-color: var(--primary-600);\n          color: white;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          margin-right: var(--space-2);\n        }\n        \n        .message-content {\n          background-color: var(--white);\n          padding: var(--space-3);\n          border-radius: var(--radius-lg);\n          box-shadow: var(--shadow-sm);\n          position: relative;\n        }\n        \n        .user-message .message-content {\n          background-color: var(--primary-600);\n          color: var(--white);\n          border-bottom-right-radius: var(--space-1);\n        }\n        \n        .assistant-message .message-content {\n          background-color: var(--white);\n          border-bottom-left-radius: var(--space-1);\n        }\n        \n        .message-error .message-content {\n          background-color: var(--danger);\n          color: var(--white);\n        }\n        \n        .message-text {\n          word-break: break-word;\n        }\n        \n        .message-time {\n          font-size: var(--font-size-xs);\n          color: var(--gray-500);\n          margin-top: var(--space-1);\n          text-align: right;\n        }\n        \n        .user-message .message-time {\n          color: rgba(255, 255, 255, 0.7);\n        }\n        \n        .message-typing {\n          opacity: 0.7;\n        }\n        \n        .typing-indicator {\n          display: flex;\n          align-items: center;\n          justify-content: flex-start;\n          gap: 5px;\n        }\n        \n        .typing-indicator span {\n          width: 8px;\n          height: 8px;\n          background-color: var(--gray-400);\n          border-radius: 50%;\n          display: inline-block;\n          animation: typing 1.4s infinite both;\n        }\n        \n        .typing-indicator span:nth-child(2) {\n          animation-delay: 0.2s;\n        }\n        \n        .typing-indicator span:nth-child(3) {\n          animation-delay: 0.4s;\n        }\n        \n        @keyframes typing {\n          0% { transform: scale(1); }\n          50% { transform: scale(1.5); }\n          100% { transform: scale(1); }\n        }\n        \n        .intro-container {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          padding: var(--space-4);\n          background-color: var(--white);\n          border-radius: var(--radius-lg);\n          margin-bottom: var(--space-3);\n          box-shadow: var(--shadow-md);\n        }\n        \n        .intro-container h3 {\n          margin-top: 0;\n          margin-bottom: var(--space-2);\n          color: var(--gray-900);\n        }\n        \n        .intro-container p {\n          margin: 0;\n          color: var(--gray-700);\n        }\n        \n        .powered-by {\n          text-align: center;\n          font-size: var(--font-size-xs);\n          color: var(--gray-500);\n          margin-top: var(--space-3);\n        }\n        \n        .brand {\n          font-weight: 600;\n          color: var(--gray-700);\n        }\n        \n        .error-toast {\n          position: fixed;\n          bottom: 20px;\n          right: 20px;\n          background-color: var(--danger);\n          color: white;\n          padding: var(--space-3) var(--space-4);\n          border-radius: var(--radius-md);\n          box-shadow: var(--shadow-md);\n          z-index: 1000;\n          animation: slideInUp 0.3s ease;\n        }\n        \n        .fade-out {\n          opacity: 0;\n          transition: opacity 0.3s ease;\n        }\n        \n        @media (max-width: 768px) {\n          .chat-container {\n            height: 70vh;\n          }\n          \n          .salus-logo {\n            width: 64px;\n            height: 64px;\n          }\n          \n          .salus-logo-large {\n            width: 120px;\n            height: 120px;\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n}\n_s(AIAssistant, \"T6eeNVEctIwUyK0FJ40VWw4+fkw=\");\n_c = AIAssistant;\nexport default AIAssistant;\nvar _c;\n$RefreshReg$(_c, \"AIAssistant\");","map":{"version":3,"names":["React","useState","useEffect","useRef","API","jsxDEV","_jsxDEV","AIAssistant","userId","_s","userMessage","setUserMessage","conversation","setConversation","isLoading","setIsLoading","userProfile","setUserProfile","userSymptoms","setUserSymptoms","showIntro","setShowIntro","suggestedQuestions","setSuggestedQuestions","messagesEndRef","chatContainerRef","welcomeMessage","role","content","fetchUserData","fetchUserSymptoms","savedConversation","localStorage","getItem","JSON","parse","e","console","error","length","setItem","stringify","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","response","get","data","showErrorToast","generateSuggestedQuestions","symptoms","recentSymptoms","slice","customQuestions","map","symptom","description","toLowerCase","generalQuestions","handleSuggestedQuestionClick","question","sendMessageToAI","messageToSend","messageText","trim","newUserMessage","updatedConversation","setTimeout","post","message","reply","Error","_error$response","_error$response$data","prepareContext","profile","symptomSummary","summarizeSymptoms","symptomsGrouped","forEach","s","push","intensity","Object","keys","desc","avgIntensity","calculateAverage","occurrences","arr","reduce","a","b","handleKeyPress","key","shiftKey","preventDefault","useSuggestedQuestion","_document$getElementB","document","getElementById","focus","toast","createElement","className","textContent","body","appendChild","classList","add","removeChild","clearConversation","window","confirm","removeItem","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","index","jsx","_c","$RefreshReg$"],"sources":["C:/Users/39338/salus/salus-frontend/src/AIAssistant.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport API from './api';\n\nfunction AIAssistant({ userId }) {\n  const [userMessage, setUserMessage] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [userProfile, setUserProfile] = useState(null);\n  const [userSymptoms, setUserSymptoms] = useState([]);\n  const [showIntro, setShowIntro] = useState(true);\n  const [suggestedQuestions, setSuggestedQuestions] = useState([\n    \"Come posso alleviare il mal di testa?\",\n    \"Quali sono i sintomi più comuni dell'influenza?\",\n    \"Dovresti consultare un medico per mal di stomaco persistente?\",\n    \"Come posso migliorare la qualità del sonno?\",\n    \"Quali sono i benefici dell'esercizio fisico regolare?\"\n  ]);\n  \n  const messagesEndRef = useRef(null);\n  const chatContainerRef = useRef(null);\n\n  // Messaggio di benvenuto\n  const welcomeMessage = {\n    role: 'assistant',\n    content: 'Ciao, sono Salus. Posso aiutarti a comprendere meglio il tuo stato di salute e rispondere alle tue domande. Come posso esserti utile oggi?'\n  };\n\n  // Carica i dati dell'utente all'avvio\n  useEffect(() => {\n    if (userId) {\n      fetchUserData();\n      fetchUserSymptoms();\n      \n      // Carica la conversazione precedente dal localStorage\n      const savedConversation = localStorage.getItem(`aiConversation_${userId}`);\n      if (savedConversation) {\n        try {\n          setConversation(JSON.parse(savedConversation));\n          setShowIntro(false);\n        } catch (e) {\n          console.error('Errore nel parsing della conversazione salvata:', e);\n        }\n      }\n    }\n  }, [userId]);\n\n  // Salva la conversazione nel localStorage quando cambia\n  useEffect(() => {\n    if (userId && conversation.length > 0) {\n      localStorage.setItem(`aiConversation_${userId}`, JSON.stringify(conversation));\n    }\n  }, [conversation, userId]);\n\n  // Scroll automatico alla fine della conversazione\n  useEffect(() => {\n    scrollToBottom();\n  }, [conversation, isLoading]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const fetchUserData = async () => {\n    try {\n      const response = await API.get(`/auth/users/${userId}`);\n      setUserProfile(response.data);\n    } catch (error) {\n      console.error('Errore nel caricamento del profilo:', error);\n      showErrorToast('Impossibile caricare il profilo utente');\n    }\n  };\n\n  const fetchUserSymptoms = async () => {\n    try {\n      const response = await API.get(`/symptoms/${userId}`);\n      setUserSymptoms(response.data);\n      \n      // Genera domande suggerite in base ai sintomi\n      if (response.data.length > 0) {\n        generateSuggestedQuestions(response.data);\n      }\n    } catch (error) {\n      console.error('Errore nel caricamento dei sintomi:', error);\n      showErrorToast('Impossibile caricare i sintomi');\n    }\n  };\n\n  const generateSuggestedQuestions = (symptoms) => {\n    if (symptoms.length === 0) return;\n    \n    // Prendi i sintomi più recenti\n    const recentSymptoms = symptoms.slice(0, 3);\n    \n    // Genera domande personalizzate\n    const customQuestions = recentSymptoms.map(symptom => \n      `Come posso gestire il mio ${symptom.description.toLowerCase()}?`\n    );\n    \n    // Aggiungi domande generali\n    const generalQuestions = [\n      \"Quali sono i pattern nei miei sintomi?\",\n      \"Dovrei essere preoccupato per questi sintomi?\",\n      \"Cosa posso fare per migliorare il mio benessere generale?\"\n    ];\n    \n    setSuggestedQuestions([...customQuestions, ...generalQuestions].slice(0, 5));\n  };\n\n  const handleSuggestedQuestionClick = (question) => {\n    setUserMessage(question);\n    sendMessageToAI(question);\n  };\n\n  const sendMessageToAI = async (messageToSend = null) => {\n    const messageText = messageToSend || userMessage;\n    if (!messageText.trim() && !isLoading) return;\n    \n    // Aggiungi il messaggio utente alla conversazione\n    const newUserMessage = { role: 'user', content: messageText };\n    const updatedConversation = [...conversation, newUserMessage];\n    setConversation(updatedConversation);\n    if (!messageToSend) setUserMessage('');\n    setShowIntro(false);\n    \n    // Prepara il contesto per OpenAI\n    setIsLoading(true);\n    \n    try {\n      // Animazione di \"sta scrivendo\"\n      setTimeout(() => {\n        scrollToBottom();\n      }, 100);\n      \n      // Versione semplificata della chiamata API\n      const response = await API.post('/ai/chat', {\n        message: newUserMessage.content\n      });\n      \n      // Se c'è una risposta, aggiungila alla conversazione\n      if (response.data && response.data.reply) {\n        // Aggiungi la risposta alla conversazione\n        setConversation([\n          ...updatedConversation, \n          { role: 'assistant', content: response.data.reply }\n        ]);\n      } else {\n        throw new Error('Risposta AI non valida');\n      }\n    } catch (error) {\n      console.error('Errore nella chiamata AI:', error);\n      setConversation([\n        ...updatedConversation, \n        { \n          role: 'assistant', \n          content: 'Mi dispiace, si è verificato un errore nella comunicazione. Riprova più tardi o controlla la tua connessione Internet.',\n          error: true\n        }\n      ]);\n      showErrorToast('Errore nella comunicazione con l\\'assistente: ' + (error.response?.data?.message || error.message));\n    } finally {\n      setIsLoading(false);\n      setTimeout(() => {\n        scrollToBottom();\n      }, 100);\n    }\n  };\n  \n  // Prepara il contesto con i dati dell'utente\n  const prepareContext = () => {\n    const recentSymptoms = userSymptoms.slice(0, 5);\n    return {\n      profile: userProfile,\n      recentSymptoms: recentSymptoms,\n      symptomSummary: summarizeSymptoms(userSymptoms)\n    };\n  };\n  \n  // Crea un riepilogo dei sintomi\n  const summarizeSymptoms = (symptoms) => {\n    const symptomsGrouped = {};\n    symptoms.forEach(s => {\n      if (!symptomsGrouped[s.description]) {\n        symptomsGrouped[s.description] = [];\n      }\n      symptomsGrouped[s.description].push(s.intensity);\n    });\n    \n    return Object.keys(symptomsGrouped).map(desc => ({\n      description: desc,\n      avgIntensity: calculateAverage(symptomsGrouped[desc]),\n      occurrences: symptomsGrouped[desc].length\n    }));\n  };\n  \n  const calculateAverage = (arr) => {\n    return arr.reduce((a, b) => a + b, 0) / arr.length;\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessageToAI();\n    }\n  };\n  \n  const useSuggestedQuestion = (question) => {\n    setUserMessage(question);\n    // Focus all'input\n    document.getElementById('messageInput')?.focus();\n  };\n  \n  const showErrorToast = (message) => {\n    // Implementazione semplice di un toast di errore\n    const toast = document.createElement('div');\n    toast.className = 'error-toast';\n    toast.textContent = message;\n    document.body.appendChild(toast);\n    \n    setTimeout(() => {\n      toast.classList.add('fade-out');\n      setTimeout(() => {\n        document.body.removeChild(toast);\n      }, 300);\n    }, 3000);\n  };\n  \n  const clearConversation = () => {\n    if (window.confirm('Sei sicuro di voler cancellare tutta la conversazione?')) {\n      setConversation([]);\n      setShowIntro(true);\n      localStorage.removeItem(`aiConversation_${userId}`);\n    }\n  };\n\n  return (\n    <div className=\"ai-assistant-container\">\n      <div className=\"ai-header\">\n        <div className=\"ai-identity\">\n          <img src=\"/logo.png\" alt=\"Salus Logo\" className=\"salus-logo\" />\n          <h2>Salus</h2>\n        </div>\n      </div>\n      \n      <div className=\"chat-container\" ref={chatContainerRef}>\n        {showIntro && (\n          <div className=\"intro-container\">\n            <img src=\"/logo.png\" alt=\"Salus Logo\" className=\"salus-logo-large\" />\n            <h3>Benvenuto nel tuo assistente personale Salus</h3>\n            <p>\n              Posso aiutarti a comprendere meglio la tua salute e rispondere alle tue domande.\n              Basandomi sui dati che hai inserito, ti offrirò consigli personalizzati.\n            </p>\n          </div>\n        )}\n        \n        <div className=\"messages-container\">\n          {conversation.length === 0 && !showIntro && (\n            <div className=\"message assistant-message\">\n              <div className=\"message-avatar\">\n                <img src=\"/logo.png\" alt=\"Salus Logo\" className=\"salus-avatar\" />\n              </div>\n              <div className=\"message-content\">\n                <p>{welcomeMessage.content}</p>\n              </div>\n            </div>\n          )}\n          \n          {conversation.map((message, index) => (\n            <div key={index} className={`message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`}>\n              {message.role === 'assistant' && (\n                <div className=\"message-avatar\">\n                  <img src=\"/logo.png\" alt=\"Salus Logo\" className=\"salus-avatar\" />\n                </div>\n              )}\n              <div className={`message-content ${message.error ? 'error' : ''}`}>\n                <p>{message.content}</p>\n              </div>\n            </div>\n          ))}\n          \n          {isLoading && (\n            <div className=\"message assistant-message\">\n              <div className=\"message-avatar\">\n                <img src=\"/logo.png\" alt=\"Salus Logo\" className=\"salus-avatar\" />\n              </div>\n              <div className=\"message-content\">\n                <div className=\"typing-indicator\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"powered-by\">\n        Powered by <span className=\"brand\">OpenAI</span> <i className=\"fas fa-bolt\"></i>\n      </div>\n      \n      {/* Stili specifici del componente */}\n      <style jsx>{`\n        .ai-assistant-container {\n          padding: var(--space-2);\n        }\n        \n        .ai-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: var(--space-4);\n        }\n        \n        .ai-identity {\n          display: flex;\n          align-items: center;\n          gap: var(--space-2);\n        }\n        \n        .salus-logo {\n          width: 48px;\n          height: 48px;\n        }\n        \n        .salus-logo-large {\n          width: 120px;\n          height: 120px;\n        }\n        \n        .chat-container {\n          display: flex;\n          flex-direction: column;\n          height: 60vh;\n          min-height: 400px;\n          border-radius: var(--radius-lg);\n          overflow: hidden;\n          background-color: var(--gray-100);\n          box-shadow: var(--shadow-md);\n          border: 1px solid var(--gray-200);\n        }\n        \n        .messages-container {\n          flex: 1;\n          overflow-y: auto;\n          padding: var(--space-4);\n          display: flex;\n          flex-direction: column;\n          gap: var(--space-3);\n        }\n        \n        .message {\n          display: flex;\n          max-width: 85%;\n          margin-bottom: var(--space-3);\n          animation: fadeIn 0.3s ease;\n        }\n        \n        .user-message {\n          margin-left: auto;\n          flex-direction: row-reverse;\n        }\n        \n        .assistant-message {\n          margin-right: auto;\n        }\n        \n        .message-avatar {\n          width: 36px;\n          height: 36px;\n          border-radius: 50%;\n          background-color: var(--primary-600);\n          color: white;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          margin-right: var(--space-2);\n        }\n        \n        .message-content {\n          background-color: var(--white);\n          padding: var(--space-3);\n          border-radius: var(--radius-lg);\n          box-shadow: var(--shadow-sm);\n          position: relative;\n        }\n        \n        .user-message .message-content {\n          background-color: var(--primary-600);\n          color: var(--white);\n          border-bottom-right-radius: var(--space-1);\n        }\n        \n        .assistant-message .message-content {\n          background-color: var(--white);\n          border-bottom-left-radius: var(--space-1);\n        }\n        \n        .message-error .message-content {\n          background-color: var(--danger);\n          color: var(--white);\n        }\n        \n        .message-text {\n          word-break: break-word;\n        }\n        \n        .message-time {\n          font-size: var(--font-size-xs);\n          color: var(--gray-500);\n          margin-top: var(--space-1);\n          text-align: right;\n        }\n        \n        .user-message .message-time {\n          color: rgba(255, 255, 255, 0.7);\n        }\n        \n        .message-typing {\n          opacity: 0.7;\n        }\n        \n        .typing-indicator {\n          display: flex;\n          align-items: center;\n          justify-content: flex-start;\n          gap: 5px;\n        }\n        \n        .typing-indicator span {\n          width: 8px;\n          height: 8px;\n          background-color: var(--gray-400);\n          border-radius: 50%;\n          display: inline-block;\n          animation: typing 1.4s infinite both;\n        }\n        \n        .typing-indicator span:nth-child(2) {\n          animation-delay: 0.2s;\n        }\n        \n        .typing-indicator span:nth-child(3) {\n          animation-delay: 0.4s;\n        }\n        \n        @keyframes typing {\n          0% { transform: scale(1); }\n          50% { transform: scale(1.5); }\n          100% { transform: scale(1); }\n        }\n        \n        .intro-container {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          padding: var(--space-4);\n          background-color: var(--white);\n          border-radius: var(--radius-lg);\n          margin-bottom: var(--space-3);\n          box-shadow: var(--shadow-md);\n        }\n        \n        .intro-container h3 {\n          margin-top: 0;\n          margin-bottom: var(--space-2);\n          color: var(--gray-900);\n        }\n        \n        .intro-container p {\n          margin: 0;\n          color: var(--gray-700);\n        }\n        \n        .powered-by {\n          text-align: center;\n          font-size: var(--font-size-xs);\n          color: var(--gray-500);\n          margin-top: var(--space-3);\n        }\n        \n        .brand {\n          font-weight: 600;\n          color: var(--gray-700);\n        }\n        \n        .error-toast {\n          position: fixed;\n          bottom: 20px;\n          right: 20px;\n          background-color: var(--danger);\n          color: white;\n          padding: var(--space-3) var(--space-4);\n          border-radius: var(--radius-md);\n          box-shadow: var(--shadow-md);\n          z-index: 1000;\n          animation: slideInUp 0.3s ease;\n        }\n        \n        .fade-out {\n          opacity: 0;\n          transition: opacity 0.3s ease;\n        }\n        \n        @media (max-width: 768px) {\n          .chat-container {\n            height: 70vh;\n          }\n          \n          .salus-logo {\n            width: 64px;\n            height: 64px;\n          }\n          \n          .salus-logo-large {\n            width: 120px;\n            height: 120px;\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default AIAssistant; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}