{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\39338\\\\salus\\\\salus-frontend\\\\src\\\\AIAssistantWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport API from './api';\n\n/**\r\n * Widget fluttuante per l'Assistente AI Salus\r\n * \r\n * Fornisce accesso rapido all'assistente da qualsiasi parte dell'app\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AIAssistantWidget({\n  userId,\n  language,\n  darkMode\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const messagesEndRef = useRef(null);\n  const messageInputRef = useRef(null);\n\n  // Dizionario traduzioni\n  const translations = {\n    it: {\n      placeholder: 'Scrivi un messaggio...',\n      welcomeTitle: 'Ciao, sono Salus',\n      welcomeMessage: 'Come posso aiutarti oggi con la tua salute?',\n      send: 'Invia',\n      loading: 'Salus sta scrivendo...',\n      errorMessage: 'Si è verificato un errore. Riprova.',\n      suggestedQuestions: 'Domande suggerite',\n      tipTitle: 'Suggerimento Salus',\n      miniPlaceholder: 'Chiedi a Salus...',\n      suggestions: ['Come posso migliorare il mio sonno?', 'Quali sono i sintomi di disidratazione?', 'Perché mi sento stanco tutto il giorno?', 'Quando dovrei preoccuparmi per il mal di testa?'],\n      contextualTips: [{\n        id: 'hydration',\n        title: 'Idratazione',\n        message: 'Ricorda di bere almeno 2 litri di acqua al giorno, specialmente durante l\\'estate.'\n      }, {\n        id: 'medication',\n        title: 'Promemoria farmaci',\n        message: 'Hai farmaci programmati per oggi. Ricorda di prenderli con regolarità.'\n      }, {\n        id: 'activity',\n        title: 'Attività fisica',\n        message: 'Non hai registrato attività fisica negli ultimi 3 giorni. Una camminata veloce può migliorare il tuo benessere.'\n      }],\n      disclaimer: 'Ricorda: le informazioni fornite hanno scopo informativo e non sostituiscono il parere del medico.'\n    },\n    en: {\n      placeholder: 'Type a message...',\n      welcomeTitle: 'Hi, I\\'m Salus',\n      welcomeMessage: 'How can I help with your health today?',\n      send: 'Send',\n      loading: 'Salus is typing...',\n      errorMessage: 'An error occurred. Please try again.',\n      suggestedQuestions: 'Suggested questions',\n      tipTitle: 'Salus Tip',\n      miniPlaceholder: 'Ask Salus...',\n      suggestions: ['How can I improve my sleep?', 'What are the symptoms of dehydration?', 'Why do I feel tired all day?', 'When should I worry about headaches?'],\n      contextualTips: [{\n        id: 'hydration',\n        title: 'Hydration',\n        message: 'Remember to drink at least 2 liters of water daily, especially during summer.'\n      }, {\n        id: 'medication',\n        title: 'Medication reminder',\n        message: 'You have medications scheduled for today. Remember to take them regularly.'\n      }, {\n        id: 'activity',\n        title: 'Physical activity',\n        message: 'You haven\\'t recorded any physical activity in the last 3 days. A brisk walk can improve your wellbeing.'\n      }],\n      disclaimer: 'Remember: information provided is for informational purposes and does not replace medical advice.'\n    },\n    es: {\n      placeholder: 'Escribe un mensaje...',\n      welcomeTitle: 'Hola, soy Salus',\n      welcomeMessage: '¿Cómo puedo ayudarte hoy con tu salud?',\n      send: 'Enviar',\n      loading: 'Salus está escribiendo...',\n      errorMessage: 'Ocurrió un error. Inténtalo de nuevo.',\n      suggestedQuestions: 'Preguntas sugeridas',\n      tipTitle: 'Consejo de Salus',\n      miniPlaceholder: 'Pregunta a Salus...',\n      suggestions: ['¿Cómo puedo mejorar mi sueño?', '¿Cuáles son los síntomas de deshidratación?', '¿Por qué me siento cansado todo el día?', '¿Cuándo debo preocuparme por los dolores de cabeza?'],\n      contextualTips: [{\n        id: 'hydration',\n        title: 'Hidratación',\n        message: 'Recuerda beber al menos 2 litros de agua al día, especialmente durante el verano.'\n      }, {\n        id: 'medication',\n        title: 'Recordatorio de medicamentos',\n        message: 'Tienes medicamentos programados para hoy. Recuerda tomarlos con regularidad.'\n      }, {\n        id: 'activity',\n        title: 'Actividad física',\n        message: 'No has registrado actividad física en los últimos 3 días. Una caminata rápida puede mejorar tu bienestar.'\n      }],\n      disclaimer: 'Recuerda: la información proporcionada es con fines informativos y no reemplaza el consejo médico.'\n    }\n  };\n\n  // Funzione per ottenere le traduzioni nella lingua selezionata\n  const t = key => {\n    var _translations$languag;\n    return ((_translations$languag = translations[language]) === null || _translations$languag === void 0 ? void 0 : _translations$languag[key]) || translations['it'][key];\n  };\n\n  // Scroll alla fine dei messaggi quando arriva un nuovo messaggio\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Messaggio di benvenuto all'apertura\n  useEffect(() => {\n    if (isOpen && messages.length === 0) {\n      // Aggiungi il messaggio di benvenuto quando si apre l'assistente la prima volta\n      setMessages([{\n        id: 'welcome',\n        type: 'assistant',\n        title: t('welcomeTitle'),\n        content: t('welcomeMessage'),\n        timestamp: new Date()\n      }]);\n\n      // Seleziona un suggerimento contestuale casuale\n      const contextualTips = t('contextualTips');\n      const randomTip = contextualTips[Math.floor(Math.random() * contextualTips.length)];\n\n      // Set di suggerimenti iniziali per l'utente\n      setSuggestions(t('suggestions'));\n    }\n  }, [isOpen, messages.length]);\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() || isLoading) return;\n    const userMessage = {\n      id: `user-${Date.now()}`,\n      type: 'user',\n      content: newMessage,\n      timestamp: new Date()\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setNewMessage('');\n    setIsLoading(true);\n    try {\n      // Invio messaggio all'API\n      const response = await API.post('/api/ai/chat', {\n        message: newMessage\n      });\n\n      // Aggiungi risposta dell'assistente\n      const assistantMessage = {\n        id: `assistant-${Date.now()}`,\n        type: 'assistant',\n        content: response.data.reply,\n        timestamp: new Date()\n      };\n      setMessages(prevMessages => [...prevMessages, assistantMessage]);\n\n      // Genera nuovi suggerimenti in base alla conversazione\n      generateSuggestions(userMessage.content, response.data.reply);\n    } catch (error) {\n      console.error('Errore nella richiesta AI:', error);\n\n      // Messaggio di errore\n      const errorMessage = {\n        id: `error-${Date.now()}`,\n        type: 'error',\n        content: t('errorMessage'),\n        timestamp: new Date()\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Funzione per generare nuovi suggerimenti in base alla conversazione\n  const generateSuggestions = (userMessage, aiReply) => {\n    // In una implementazione reale, questo potrebbe essere generato dall'API\n    // in base all'analisi della conversazione\n\n    // Per ora, usiamo alcuni suggerimenti predefiniti in base a pattern nella conversazione\n    const lowercaseMsg = userMessage.toLowerCase();\n    const lowercaseReply = aiReply.toLowerCase();\n    let newSuggestions = [];\n    if (lowercaseMsg.includes('sonno') || lowercaseReply.includes('sonno')) {\n      newSuggestions = ['Quali alimenti favoriscono il sonno?', 'Quanto sonno è necessario per un adulto?', 'Come posso ridurre l\\'insonnia?'];\n    } else if (lowercaseMsg.includes('stress') || lowercaseReply.includes('stress')) {\n      newSuggestions = ['Quali sono i sintomi fisici dello stress?', 'Tecniche di respirazione per ridurre l\\'ansia', 'Lo stress può influenzare la pressione sanguigna?'];\n    } else if (lowercaseMsg.includes('mal di testa') || lowercaseReply.includes('mal di testa')) {\n      newSuggestions = ['Quali sono le cause più comuni del mal di testa?', 'Differenza tra emicrania e cefalea tensiva', 'Quando devo preoccuparmi per un mal di testa forte?'];\n    } else {\n      // Suggerimenti generici se non troviamo pattern specifici\n      newSuggestions = ['Come posso migliorare la mia alimentazione?', 'Quanto esercizio fisico è consigliato settimanalmente?', 'Come posso monitorare meglio la mia salute?', 'Quali sono i segnali di allarme per problemi cardiaci?'];\n    }\n    setSuggestions(newSuggestions);\n  };\n  const handleSuggestionClick = suggestion => {\n    setNewMessage(suggestion);\n    if (messageInputRef.current) {\n      messageInputRef.current.focus();\n    }\n  };\n  const formatTimestamp = timestamp => {\n    return new Intl.DateTimeFormat(language === 'en' ? 'en-US' : language === 'es' ? 'es-ES' : 'it-IT', {\n      hour: '2-digit',\n      minute: '2-digit'\n    }).format(timestamp);\n  };\n  const toggleAssistant = () => {\n    setIsOpen(!isOpen);\n  };\n\n  // Se è aperto, mostra il pannello dell'assistente, altrimenti solo il pulsante\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `ai-assistant-widget ${isOpen ? 'open' : ''}`,\n    children: !isOpen ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ai-widget-button pulse-animation\",\n      onClick: toggleAssistant,\n      \"aria-label\": \"Apri assistente Salus\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-widget-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/salus-logo.svg\",\n          alt: \"Salus\",\n          className: \"salus-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-widget-text\",\n        children: t('miniPlaceholder')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-assistant-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-panel-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-identity\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/salus-logo.svg\",\n            alt: \"Salus\",\n            className: \"salus-logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Salus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ai-status\",\n              children: \"Assistente Sanitario\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ai-close-button\",\n          onClick: toggleAssistant,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-message-container\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ai-message ${message.type === 'user' ? 'user-message' : message.type === 'error' ? 'error-message' : 'assistant-message'}`,\n          children: [message.type === 'user' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"assistant-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/salus-logo.svg\",\n              alt: \"Salus\",\n              className: \"salus-logo-small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [message.title && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-title\",\n              children: message.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: formatTimestamp(message.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-message assistant-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"assistant-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/salus-logo.svg\",\n              alt: \"Salus\",\n              className: \"salus-logo-small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-suggestions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions-title\",\n          children: t('suggestedQuestions')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions-list\",\n          children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"suggestion-chip\",\n            onClick: () => handleSuggestionClick(suggestion),\n            children: suggestion\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-disclaimer\",\n        children: t('disclaimer')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: messageInputRef,\n          className: \"ai-input\",\n          placeholder: t('placeholder'),\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && handleSendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ai-send-button\",\n          onClick: handleSendMessage,\n          disabled: !newMessage.trim() || isLoading,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-paper-plane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n}\n_s(AIAssistantWidget, \"8q2AKjqErMjdammT2rYzCTsZk84=\");\n_c = AIAssistantWidget;\nexport default AIAssistantWidget;\nvar _c;\n$RefreshReg$(_c, \"AIAssistantWidget\");","map":{"version":3,"names":["React","useState","useEffect","useRef","API","jsxDEV","_jsxDEV","AIAssistantWidget","userId","language","darkMode","_s","isOpen","setIsOpen","messages","setMessages","newMessage","setNewMessage","isLoading","setIsLoading","suggestions","setSuggestions","messagesEndRef","messageInputRef","translations","it","placeholder","welcomeTitle","welcomeMessage","send","loading","errorMessage","suggestedQuestions","tipTitle","miniPlaceholder","contextualTips","id","title","message","disclaimer","en","es","t","key","_translations$languag","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","length","type","content","timestamp","Date","randomTip","Math","floor","random","handleSendMessage","trim","userMessage","now","prevMessages","response","post","assistantMessage","data","reply","generateSuggestions","error","console","aiReply","lowercaseMsg","toLowerCase","lowercaseReply","newSuggestions","includes","handleSuggestionClick","suggestion","focus","formatTimestamp","Intl","DateTimeFormat","hour","minute","format","toggleAssistant","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","ref","index","value","onChange","e","target","onKeyPress","disabled","_c","$RefreshReg$"],"sources":["C:/Users/39338/salus/salus-frontend/src/AIAssistantWidget.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport API from './api';\r\n\r\n/**\r\n * Widget fluttuante per l'Assistente AI Salus\r\n * \r\n * Fornisce accesso rapido all'assistente da qualsiasi parte dell'app\r\n */\r\nfunction AIAssistantWidget({ userId, language, darkMode }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n  const messageInputRef = useRef(null);\r\n\r\n  // Dizionario traduzioni\r\n  const translations = {\r\n    it: {\r\n      placeholder: 'Scrivi un messaggio...',\r\n      welcomeTitle: 'Ciao, sono Salus',\r\n      welcomeMessage: 'Come posso aiutarti oggi con la tua salute?',\r\n      send: 'Invia',\r\n      loading: 'Salus sta scrivendo...',\r\n      errorMessage: 'Si è verificato un errore. Riprova.',\r\n      suggestedQuestions: 'Domande suggerite',\r\n      tipTitle: 'Suggerimento Salus',\r\n      miniPlaceholder: 'Chiedi a Salus...',\r\n      suggestions: [\r\n        'Come posso migliorare il mio sonno?',\r\n        'Quali sono i sintomi di disidratazione?',\r\n        'Perché mi sento stanco tutto il giorno?',\r\n        'Quando dovrei preoccuparmi per il mal di testa?'\r\n      ],\r\n      contextualTips: [\r\n        {\r\n          id: 'hydration',\r\n          title: 'Idratazione',\r\n          message: 'Ricorda di bere almeno 2 litri di acqua al giorno, specialmente durante l\\'estate.'\r\n        },\r\n        {\r\n          id: 'medication',\r\n          title: 'Promemoria farmaci',\r\n          message: 'Hai farmaci programmati per oggi. Ricorda di prenderli con regolarità.'\r\n        },\r\n        {\r\n          id: 'activity',\r\n          title: 'Attività fisica',\r\n          message: 'Non hai registrato attività fisica negli ultimi 3 giorni. Una camminata veloce può migliorare il tuo benessere.'\r\n        }\r\n      ],\r\n      disclaimer: 'Ricorda: le informazioni fornite hanno scopo informativo e non sostituiscono il parere del medico.'\r\n    },\r\n    en: {\r\n      placeholder: 'Type a message...',\r\n      welcomeTitle: 'Hi, I\\'m Salus',\r\n      welcomeMessage: 'How can I help with your health today?',\r\n      send: 'Send',\r\n      loading: 'Salus is typing...',\r\n      errorMessage: 'An error occurred. Please try again.',\r\n      suggestedQuestions: 'Suggested questions',\r\n      tipTitle: 'Salus Tip',\r\n      miniPlaceholder: 'Ask Salus...',\r\n      suggestions: [\r\n        'How can I improve my sleep?',\r\n        'What are the symptoms of dehydration?',\r\n        'Why do I feel tired all day?',\r\n        'When should I worry about headaches?'\r\n      ],\r\n      contextualTips: [\r\n        {\r\n          id: 'hydration',\r\n          title: 'Hydration',\r\n          message: 'Remember to drink at least 2 liters of water daily, especially during summer.'\r\n        },\r\n        {\r\n          id: 'medication',\r\n          title: 'Medication reminder',\r\n          message: 'You have medications scheduled for today. Remember to take them regularly.'\r\n        },\r\n        {\r\n          id: 'activity',\r\n          title: 'Physical activity',\r\n          message: 'You haven\\'t recorded any physical activity in the last 3 days. A brisk walk can improve your wellbeing.'\r\n        }\r\n      ],\r\n      disclaimer: 'Remember: information provided is for informational purposes and does not replace medical advice.'\r\n    },\r\n    es: {\r\n      placeholder: 'Escribe un mensaje...',\r\n      welcomeTitle: 'Hola, soy Salus',\r\n      welcomeMessage: '¿Cómo puedo ayudarte hoy con tu salud?',\r\n      send: 'Enviar',\r\n      loading: 'Salus está escribiendo...',\r\n      errorMessage: 'Ocurrió un error. Inténtalo de nuevo.',\r\n      suggestedQuestions: 'Preguntas sugeridas',\r\n      tipTitle: 'Consejo de Salus',\r\n      miniPlaceholder: 'Pregunta a Salus...',\r\n      suggestions: [\r\n        '¿Cómo puedo mejorar mi sueño?',\r\n        '¿Cuáles son los síntomas de deshidratación?',\r\n        '¿Por qué me siento cansado todo el día?',\r\n        '¿Cuándo debo preocuparme por los dolores de cabeza?'\r\n      ],\r\n      contextualTips: [\r\n        {\r\n          id: 'hydration',\r\n          title: 'Hidratación',\r\n          message: 'Recuerda beber al menos 2 litros de agua al día, especialmente durante el verano.'\r\n        },\r\n        {\r\n          id: 'medication',\r\n          title: 'Recordatorio de medicamentos',\r\n          message: 'Tienes medicamentos programados para hoy. Recuerda tomarlos con regularidad.'\r\n        },\r\n        {\r\n          id: 'activity',\r\n          title: 'Actividad física',\r\n          message: 'No has registrado actividad física en los últimos 3 días. Una caminata rápida puede mejorar tu bienestar.'\r\n        }\r\n      ],\r\n      disclaimer: 'Recuerda: la información proporcionada es con fines informativos y no reemplaza el consejo médico.'\r\n    }\r\n  };\r\n\r\n  // Funzione per ottenere le traduzioni nella lingua selezionata\r\n  const t = (key) => {\r\n    return translations[language]?.[key] || translations['it'][key];\r\n  };\r\n\r\n  // Scroll alla fine dei messaggi quando arriva un nuovo messaggio\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  // Messaggio di benvenuto all'apertura\r\n  useEffect(() => {\r\n    if (isOpen && messages.length === 0) {\r\n      // Aggiungi il messaggio di benvenuto quando si apre l'assistente la prima volta\r\n      setMessages([\r\n        {\r\n          id: 'welcome',\r\n          type: 'assistant',\r\n          title: t('welcomeTitle'),\r\n          content: t('welcomeMessage'),\r\n          timestamp: new Date()\r\n        }\r\n      ]);\r\n      \r\n      // Seleziona un suggerimento contestuale casuale\r\n      const contextualTips = t('contextualTips');\r\n      const randomTip = contextualTips[Math.floor(Math.random() * contextualTips.length)];\r\n      \r\n      // Set di suggerimenti iniziali per l'utente\r\n      setSuggestions(t('suggestions'));\r\n    }\r\n  }, [isOpen, messages.length]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!newMessage.trim() || isLoading) return;\r\n    \r\n    const userMessage = {\r\n      id: `user-${Date.now()}`,\r\n      type: 'user',\r\n      content: newMessage,\r\n      timestamp: new Date()\r\n    };\r\n    \r\n    setMessages(prevMessages => [...prevMessages, userMessage]);\r\n    setNewMessage('');\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Invio messaggio all'API\r\n      const response = await API.post('/api/ai/chat', { message: newMessage });\r\n      \r\n      // Aggiungi risposta dell'assistente\r\n      const assistantMessage = {\r\n        id: `assistant-${Date.now()}`,\r\n        type: 'assistant',\r\n        content: response.data.reply,\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      setMessages(prevMessages => [...prevMessages, assistantMessage]);\r\n      \r\n      // Genera nuovi suggerimenti in base alla conversazione\r\n      generateSuggestions(userMessage.content, response.data.reply);\r\n    } catch (error) {\r\n      console.error('Errore nella richiesta AI:', error);\r\n      \r\n      // Messaggio di errore\r\n      const errorMessage = {\r\n        id: `error-${Date.now()}`,\r\n        type: 'error',\r\n        content: t('errorMessage'),\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Funzione per generare nuovi suggerimenti in base alla conversazione\r\n  const generateSuggestions = (userMessage, aiReply) => {\r\n    // In una implementazione reale, questo potrebbe essere generato dall'API\r\n    // in base all'analisi della conversazione\r\n\r\n    // Per ora, usiamo alcuni suggerimenti predefiniti in base a pattern nella conversazione\r\n    const lowercaseMsg = userMessage.toLowerCase();\r\n    const lowercaseReply = aiReply.toLowerCase();\r\n    \r\n    let newSuggestions = [];\r\n    \r\n    if (lowercaseMsg.includes('sonno') || lowercaseReply.includes('sonno')) {\r\n      newSuggestions = [\r\n        'Quali alimenti favoriscono il sonno?',\r\n        'Quanto sonno è necessario per un adulto?',\r\n        'Come posso ridurre l\\'insonnia?'\r\n      ];\r\n    } else if (lowercaseMsg.includes('stress') || lowercaseReply.includes('stress')) {\r\n      newSuggestions = [\r\n        'Quali sono i sintomi fisici dello stress?',\r\n        'Tecniche di respirazione per ridurre l\\'ansia',\r\n        'Lo stress può influenzare la pressione sanguigna?'\r\n      ];\r\n    } else if (lowercaseMsg.includes('mal di testa') || lowercaseReply.includes('mal di testa')) {\r\n      newSuggestions = [\r\n        'Quali sono le cause più comuni del mal di testa?',\r\n        'Differenza tra emicrania e cefalea tensiva',\r\n        'Quando devo preoccuparmi per un mal di testa forte?'\r\n      ];\r\n    } else {\r\n      // Suggerimenti generici se non troviamo pattern specifici\r\n      newSuggestions = [\r\n        'Come posso migliorare la mia alimentazione?',\r\n        'Quanto esercizio fisico è consigliato settimanalmente?',\r\n        'Come posso monitorare meglio la mia salute?',\r\n        'Quali sono i segnali di allarme per problemi cardiaci?'\r\n      ];\r\n    }\r\n    \r\n    setSuggestions(newSuggestions);\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    setNewMessage(suggestion);\r\n    if (messageInputRef.current) {\r\n      messageInputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const formatTimestamp = (timestamp) => {\r\n    return new Intl.DateTimeFormat(language === 'en' ? 'en-US' : language === 'es' ? 'es-ES' : 'it-IT', {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    }).format(timestamp);\r\n  };\r\n\r\n  const toggleAssistant = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  // Se è aperto, mostra il pannello dell'assistente, altrimenti solo il pulsante\r\n  return (\r\n    <div className={`ai-assistant-widget ${isOpen ? 'open' : ''}`}>\r\n      {!isOpen ? (\r\n        <button \r\n          className=\"ai-widget-button pulse-animation\" \r\n          onClick={toggleAssistant}\r\n          aria-label=\"Apri assistente Salus\"\r\n        >\r\n          <div className=\"ai-widget-icon\">\r\n            <img src=\"/salus-logo.svg\" alt=\"Salus\" className=\"salus-logo\" />\r\n          </div>\r\n          <div className=\"ai-widget-text\">{t('miniPlaceholder')}</div>\r\n        </button>\r\n      ) : (\r\n        <div className=\"ai-assistant-panel\">\r\n          <div className=\"ai-panel-header\">\r\n            <div className=\"ai-identity\">\r\n              <img src=\"/salus-logo.svg\" alt=\"Salus\" className=\"salus-logo\" />\r\n              <div className=\"ai-info\">\r\n                <h3>Salus</h3>\r\n                <span className=\"ai-status\">Assistente Sanitario</span>\r\n              </div>\r\n            </div>\r\n            <button className=\"ai-close-button\" onClick={toggleAssistant}>\r\n              <i className=\"fas fa-times\"></i>\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"ai-message-container\">\r\n            {messages.map((message) => (\r\n              <div \r\n                key={message.id} \r\n                className={`ai-message ${message.type === 'user' ? 'user-message' : message.type === 'error' ? 'error-message' : 'assistant-message'}`}\r\n              >\r\n                {message.type === 'user' ? (\r\n                  <div className=\"user-avatar\">\r\n                    <i className=\"fas fa-user\"></i>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"assistant-avatar\">\r\n                    <img src=\"/salus-logo.svg\" alt=\"Salus\" className=\"salus-logo-small\" />\r\n                  </div>\r\n                )}\r\n                <div className=\"message-content\">\r\n                  {message.title && <div className=\"message-title\">{message.title}</div>}\r\n                  <div className=\"message-text\">{message.content}</div>\r\n                  <div className=\"message-time\">{formatTimestamp(message.timestamp)}</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            \r\n            {isLoading && (\r\n              <div className=\"ai-message assistant-message\">\r\n                <div className=\"assistant-avatar\">\r\n                  <img src=\"/salus-logo.svg\" alt=\"Salus\" className=\"salus-logo-small\" />\r\n                </div>\r\n                <div className=\"message-content\">\r\n                  <div className=\"typing-indicator\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n          \r\n          {suggestions.length > 0 && (\r\n            <div className=\"ai-suggestions\">\r\n              <div className=\"suggestions-title\">{t('suggestedQuestions')}</div>\r\n              <div className=\"suggestions-list\">\r\n                {suggestions.map((suggestion, index) => (\r\n                  <button \r\n                    key={index} \r\n                    className=\"suggestion-chip\"\r\n                    onClick={() => handleSuggestionClick(suggestion)}\r\n                  >\r\n                    {suggestion}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"ai-disclaimer\">{t('disclaimer')}</div>\r\n          \r\n          <div className=\"ai-input-container\">\r\n            <input\r\n              type=\"text\"\r\n              ref={messageInputRef}\r\n              className=\"ai-input\"\r\n              placeholder={t('placeholder')}\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n              onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n            />\r\n            <button \r\n              className=\"ai-send-button\" \r\n              onClick={handleSendMessage}\r\n              disabled={!newMessage.trim() || isLoading}\r\n            >\r\n              <i className=\"fas fa-paper-plane\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AIAssistantWidget; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}