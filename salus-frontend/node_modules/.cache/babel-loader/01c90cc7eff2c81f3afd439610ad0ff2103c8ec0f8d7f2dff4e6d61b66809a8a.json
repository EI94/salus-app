{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\39338\\\\salus\\\\salus-frontend\\\\src\\\\AIAssistant.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport API from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AIAssistant({\n  userId\n}) {\n  _s();\n  const [userMessage, setUserMessage] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [userProfile, setUserProfile] = useState(null);\n  const [userSymptoms, setUserSymptoms] = useState([]);\n  const [showIntro, setShowIntro] = useState(true);\n  const [suggestedQuestions, setSuggestedQuestions] = useState([\"Come posso alleviare il mal di testa?\", \"Quali sono i sintomi più comuni dell'influenza?\", \"Dovresti consultare un medico per mal di stomaco persistente?\", \"Come posso migliorare la qualità del sonno?\", \"Quali sono i benefici dell'esercizio fisico regolare?\"]);\n  const messagesEndRef = useRef(null);\n  const chatContainerRef = useRef(null);\n\n  // Messaggio di benvenuto\n  const welcomeMessage = {\n    id: 'welcome',\n    text: 'Ciao! Sono Salus, il tuo assistente personale per la salute. Posso aiutarti a monitorare i tuoi sintomi, rispondere a domande mediche generali, e fornirti informazioni sui tuoi dati di salute. Ricorda che non posso sostituire un medico - le mie risposte sono solo informative e mai diagnostiche. Come posso aiutarti oggi?',\n    isAI: true\n  };\n\n  // Carica i dati dell'utente all'avvio\n  useEffect(() => {\n    if (userId) {\n      fetchUserData();\n      fetchUserSymptoms();\n\n      // Carica la conversazione precedente dal localStorage\n      const savedConversation = localStorage.getItem(`aiConversation_${userId}`);\n      if (savedConversation) {\n        try {\n          setConversation(JSON.parse(savedConversation));\n          setShowIntro(false);\n        } catch (e) {\n          console.error('Errore nel parsing della conversazione salvata:', e);\n        }\n      }\n    }\n  }, [userId]);\n\n  // Salva la conversazione nel localStorage quando cambia\n  useEffect(() => {\n    if (userId && conversation.length > 0) {\n      localStorage.setItem(`aiConversation_${userId}`, JSON.stringify(conversation));\n    }\n  }, [conversation, userId]);\n\n  // Scroll automatico alla fine della conversazione\n  useEffect(() => {\n    scrollToBottom();\n  }, [conversation, isLoading]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const fetchUserData = async () => {\n    try {\n      const response = await API.get(`/auth/users/${userId}`);\n      setUserProfile(response.data);\n    } catch (error) {\n      console.error('Errore nel caricamento del profilo:', error);\n      showErrorToast('Impossibile caricare il profilo utente');\n    }\n  };\n  const fetchUserSymptoms = async () => {\n    try {\n      const response = await API.get(`/symptoms/${userId}`);\n      setUserSymptoms(response.data);\n\n      // Genera domande suggerite in base ai sintomi\n      if (response.data.length > 0) {\n        generateSuggestedQuestions(response.data);\n      }\n    } catch (error) {\n      console.error('Errore nel caricamento dei sintomi:', error);\n      showErrorToast('Impossibile caricare i sintomi');\n    }\n  };\n  const generateSuggestedQuestions = symptoms => {\n    if (symptoms.length === 0) return;\n\n    // Prendi i sintomi più recenti\n    const recentSymptoms = symptoms.slice(0, 3);\n\n    // Genera domande personalizzate\n    const customQuestions = recentSymptoms.map(symptom => `Come posso gestire il mio ${symptom.description.toLowerCase()}?`);\n\n    // Aggiungi domande generali\n    const generalQuestions = [\"Quali sono i pattern nei miei sintomi?\", \"Dovrei essere preoccupato per questi sintomi?\", \"Cosa posso fare per migliorare il mio benessere generale?\"];\n    setSuggestedQuestions([...customQuestions, ...generalQuestions].slice(0, 5));\n  };\n  const handleSuggestedQuestionClick = question => {\n    setUserMessage(question);\n    sendMessageToAI(question);\n  };\n  const sendMessageToAI = async (messageToSend = null) => {\n    const messageText = messageToSend || userMessage;\n    if (!messageText.trim() && !isLoading) return;\n\n    // Aggiungi il messaggio utente alla conversazione\n    const newUserMessage = {\n      role: 'user',\n      content: messageText\n    };\n    const updatedConversation = [...conversation, newUserMessage];\n    setConversation(updatedConversation);\n    if (!messageToSend) setUserMessage('');\n    setShowIntro(false);\n\n    // Prepara il contesto per OpenAI\n    setIsLoading(true);\n    try {\n      // Animazione di \"sta scrivendo\"\n      setTimeout(() => {\n        scrollToBottom();\n      }, 100);\n\n      // Chiamata all'API\n      console.log('Invio messaggio all\\'AI:', messageText);\n      try {\n        const response = await API.post('/ai/chat', {\n          message: messageText\n        });\n        console.log('Risposta ricevuta:', response.data);\n\n        // Se c'è una risposta, aggiungila alla conversazione\n        if (response.data && response.data.reply) {\n          // Aggiungi la risposta alla conversazione\n          setConversation([...updatedConversation, {\n            role: 'assistant',\n            content: response.data.reply\n          }]);\n\n          // Se c'è stato un errore nel backend ma abbiamo comunque una risposta di fallback\n          if (response.data.errorOccurred) {\n            showErrorToast('C\\'è stato un problema con l\\'assistente AI, ma ho comunque cercato di rispondere al meglio.');\n          }\n        } else {\n          throw new Error('Risposta AI non valida');\n        }\n      } catch (apiError) {\n        console.error('Errore nella chiamata API:', apiError);\n        // Utilizziamo una risposta predefinita per mantenere l'utente informato\n        setConversation([...updatedConversation, {\n          role: 'assistant',\n          content: 'Mi dispiace, sto riscontrando problemi tecnici nel rispondere alla tua domanda. Come assistente per la salute, posso comunque ricordarti che è sempre consigliabile consultare un medico per qualsiasi preoccupazione relativa alla tua salute. Riprova più tardi con la tua domanda.',\n          error: true\n        }]);\n        showErrorToast('Problema di connessione con l\\'assistente AI. Riprova più tardi.');\n      }\n    } catch (error) {\n      console.error('Errore nella chiamata AI:', error);\n      setConversation([...updatedConversation, {\n        role: 'assistant',\n        content: 'Mi dispiace, si è verificato un errore imprevisto. Il nostro team è stato notificato del problema. Riprova più tardi o contatta l\\'assistenza se il problema persiste.',\n        error: true\n      }]);\n      showErrorToast('Errore nella comunicazione con l\\'assistente: ' + (error.message || 'Errore sconosciuto'));\n    } finally {\n      setIsLoading(false);\n      setTimeout(() => {\n        scrollToBottom();\n      }, 100);\n    }\n  };\n\n  // Prepara il contesto con i dati dell'utente\n  const prepareContext = () => {\n    const recentSymptoms = userSymptoms.slice(0, 5);\n    return {\n      profile: userProfile,\n      recentSymptoms: recentSymptoms,\n      symptomSummary: summarizeSymptoms(userSymptoms)\n    };\n  };\n\n  // Crea un riepilogo dei sintomi\n  const summarizeSymptoms = symptoms => {\n    const symptomsGrouped = {};\n    symptoms.forEach(s => {\n      if (!symptomsGrouped[s.description]) {\n        symptomsGrouped[s.description] = [];\n      }\n      symptomsGrouped[s.description].push(s.intensity);\n    });\n    return Object.keys(symptomsGrouped).map(desc => ({\n      description: desc,\n      avgIntensity: calculateAverage(symptomsGrouped[desc]),\n      occurrences: symptomsGrouped[desc].length\n    }));\n  };\n  const calculateAverage = arr => {\n    return arr.reduce((a, b) => a + b, 0) / arr.length;\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessageToAI();\n    }\n  };\n  const useSuggestedQuestion = question => {\n    var _document$getElementB;\n    setUserMessage(question);\n    // Focus all'input\n    (_document$getElementB = document.getElementById('messageInput')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.focus();\n  };\n  const showErrorToast = message => {\n    // Implementazione semplice di un toast di errore\n    const toast = document.createElement('div');\n    toast.className = 'error-toast';\n    toast.textContent = message;\n    document.body.appendChild(toast);\n    setTimeout(() => {\n      toast.classList.add('fade-out');\n      setTimeout(() => {\n        document.body.removeChild(toast);\n      }, 300);\n    }, 3000);\n  };\n  const clearConversation = () => {\n    if (window.confirm('Sei sicuro di voler cancellare tutta la conversazione?')) {\n      setConversation([]);\n      setShowIntro(true);\n      localStorage.removeItem(`aiConversation_${userId}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-assistant-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-identity\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"salus-logo-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/logo.svg\",\n            alt: \"Salus Logo\",\n            className: \"salus-logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ai-assistant-name\",\n          children: \"Salus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearConversation,\n        className: \"btn btn-sm btn-outline\",\n        title: \"Cancella conversazione\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-trash-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-disclaimer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"disclaimer-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-stethoscope\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Nota importante:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 50\n        }, this), \" L'assistente Salus fornisce informazioni generali ma \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"non sostituisce il parere medico professionale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 137\n        }, this), \". Consulta sempre un medico per diagnosi e trattamenti.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      ref: chatContainerRef,\n      children: [showIntro && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"intro-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"salus-logo-large-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/logo.svg\",\n            alt: \"Salus Logo\",\n            className: \"salus-logo-large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: welcomeMessage.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-detailed-disclaimer\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-exclamation-triangle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 18\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Ricorda:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 66\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Non posso fornire diagnosi mediche o prescrizioni.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Le informazioni che fornisco sono di carattere generale.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"In caso di emergenza, chiama immediatamente il 118.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Consulta sempre un medico per i tuoi problemi di salute.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Non ritardare mai una visita medica basandoti sui miei consigli.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggested-questions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Domande suggerite:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), suggestedQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"suggested-question\",\n            onClick: () => handleSuggestedQuestionClick(question),\n            children: question\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: [conversation.length === 0 && !showIntro && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message assistant-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/logo.svg\",\n                alt: \"Salus Logo\",\n                className: \"salus-avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: welcomeMessage.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), conversation.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`,\n          children: [message.role === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/logo.svg\",\n                alt: \"Salus Logo\",\n                className: \"salus-avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-content ${message.error ? 'error' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: new Date().toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message assistant-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/logo.svg\",\n                alt: \"Salus Logo\",\n                className: \"salus-avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"messageInput\",\n        className: \"message-input\",\n        placeholder: \"Scrivi un messaggio...\",\n        value: userMessage,\n        onChange: e => setUserMessage(e.target.value),\n        onKeyPress: handleKeyPress,\n        rows: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: () => sendMessageToAI(),\n        disabled: isLoading || !userMessage.trim(),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-paper-plane\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"powered-by\",\n      children: [\"Powered by \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"brand\",\n        children: \"OpenAI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 20\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-bolt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .ai-assistant-container {\n          padding: var(--space-3);\n          display: flex;\n          flex-direction: column;\n          height: 100%;\n        }\n        \n        .ai-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: var(--space-4);\n          padding-bottom: var(--space-3);\n          border-bottom: 1px solid var(--gray-200);\n        }\n        \n        .ai-identity {\n          display: flex;\n          align-items: center;\n          gap: var(--space-2);\n        }\n        \n        .ai-assistant-name {\n          font-size: 1.2rem;\n          font-weight: 600;\n          color: var(--primary-600);\n        }\n        \n        .salus-logo-container {\n          width: 36px;\n          height: 36px;\n          border-radius: 50%;\n          background-color: white;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n          overflow: hidden;\n        }\n        \n        .salus-logo {\n          width: 28px;\n          height: 28px;\n          object-fit: contain;\n        }\n        \n        .salus-logo-large-container {\n          width: 100px;\n          height: 100px;\n          border-radius: 50%;\n          background-color: white;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n          margin: 0 auto 20px;\n          overflow: hidden;\n        }\n        \n        .salus-logo-large {\n          width: 80px;\n          height: 80px;\n          object-fit: contain;\n        }\n        \n        .avatar-container {\n          width: 36px;\n          height: 36px;\n          border-radius: 50%;\n          background-color: white;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n          overflow: hidden;\n        }\n        \n        .salus-avatar {\n          width: 28px;\n          height: 28px;\n          object-fit: contain;\n        }\n        \n        .chat-container {\n          display: flex;\n          flex-direction: column;\n          flex: 1;\n          min-height: 300px;\n          max-height: calc(100vh - 300px);\n          border-radius: var(--radius-lg);\n          overflow: hidden;\n          background-color: var(--gray-100);\n          box-shadow: var(--shadow-md);\n          border: 1px solid var(--gray-200);\n        }\n        \n        .messages-container {\n          flex: 1;\n          overflow-y: auto;\n          padding: var(--space-4);\n          display: flex;\n          flex-direction: column;\n          gap: var(--space-3);\n        }\n        \n        .message {\n          display: flex;\n          max-width: 85%;\n          margin-bottom: var(--space-3);\n          animation: fadeIn 0.3s ease;\n        }\n        \n        .user-message {\n          margin-left: auto;\n          flex-direction: row-reverse;\n        }\n        \n        .assistant-message {\n          margin-right: auto;\n        }\n        \n        .message-avatar {\n          display: flex;\n          align-items: flex-start;\n          margin-right: var(--space-2);\n        }\n        \n        .message-content {\n          background-color: var(--white);\n          padding: var(--space-3);\n          border-radius: var(--radius-lg);\n          box-shadow: var(--shadow-sm);\n          position: relative;\n          min-width: 80px;\n        }\n        \n        .user-message .message-content {\n          background-color: var(--primary-600);\n          color: var(--white);\n          border-bottom-right-radius: var(--space-1);\n        }\n        \n        .assistant-message .message-content {\n          background-color: var(--white);\n          border-bottom-left-radius: var(--space-1);\n        }\n        \n        .message-error .message-content {\n          background-color: var(--danger);\n          color: var(--white);\n        }\n        \n        .message-time {\n          font-size: 0.7rem;\n          color: var(--gray-500);\n          margin-top: var(--space-1);\n          text-align: right;\n        }\n        \n        .user-message .message-time {\n          color: rgba(255, 255, 255, 0.7);\n        }\n        \n        .typing-indicator {\n          display: flex;\n          align-items: center;\n          justify-content: flex-start;\n          gap: 5px;\n          padding: 8px 0;\n        }\n        \n        .typing-indicator span {\n          width: 8px;\n          height: 8px;\n          background-color: var(--primary-600);\n          border-radius: 50%;\n          display: inline-block;\n          opacity: 0.6;\n          animation: typing 1.4s infinite both;\n        }\n        \n        .typing-indicator span:nth-child(2) {\n          animation-delay: 0.2s;\n        }\n        \n        .typing-indicator span:nth-child(3) {\n          animation-delay: 0.4s;\n        }\n        \n        @keyframes typing {\n          0% { transform: scale(1); }\n          50% { transform: scale(1.5); }\n          100% { transform: scale(1); }\n        }\n        \n        .intro-container {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          padding: var(--space-4);\n          background-color: var(--white);\n          border-radius: var(--radius-lg);\n          margin: var(--space-3);\n          box-shadow: var(--shadow-md);\n          text-align: center;\n        }\n        \n        .intro-container h3 {\n          margin-top: 0;\n          margin-bottom: var(--space-3);\n          color: var(--gray-900);\n          font-size: 1.1rem;\n          line-height: 1.5;\n        }\n        \n        .suggested-questions {\n          width: 100%;\n          margin-top: var(--space-4);\n        }\n        \n        .suggested-questions h4 {\n          margin-bottom: var(--space-2);\n          color: var(--gray-700);\n          font-size: 0.9rem;\n        }\n        \n        .suggested-question {\n          display: block;\n          width: 100%;\n          padding: var(--space-2) var(--space-3);\n          margin-bottom: var(--space-2);\n          border: 1px solid var(--primary-200);\n          background-color: var(--primary-50);\n          border-radius: var(--radius-md);\n          text-align: left;\n          transition: all 0.2s ease;\n          font-size: 0.9rem;\n          cursor: pointer;\n        }\n        \n        .suggested-question:hover {\n          background-color: var(--primary-100);\n          border-color: var(--primary-300);\n        }\n        \n        .input-container {\n          display: flex;\n          margin-top: var(--space-3);\n          border: 1px solid var(--gray-300);\n          border-radius: var(--radius-lg);\n          background-color: var(--white);\n          padding: var(--space-2);\n          box-shadow: var(--shadow-md);\n        }\n        \n        .message-input {\n          flex: 1;\n          border: none;\n          padding: var(--space-2);\n          font-size: 0.95rem;\n          resize: none;\n          max-height: 100px;\n          overflow-y: auto;\n          background: transparent;\n        }\n        \n        .message-input:focus {\n          outline: none;\n        }\n        \n        .send-button {\n          background-color: var(--primary-600);\n          color: white;\n          border: none;\n          width: 36px;\n          height: 36px;\n          border-radius: 50%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          cursor: pointer;\n          transition: background-color 0.2s ease;\n        }\n        \n        .send-button:hover {\n          background-color: var(--primary-700);\n        }\n        \n        .send-button:disabled {\n          background-color: var(--gray-400);\n          cursor: not-allowed;\n        }\n        \n        .powered-by {\n          text-align: center;\n          font-size: var(--font-size-xs);\n          color: var(--gray-500);\n          margin-top: var(--space-3);\n        }\n        \n        .brand {\n          font-weight: 600;\n          color: var(--gray-700);\n        }\n        \n        .error-toast {\n          position: fixed;\n          bottom: 20px;\n          right: 20px;\n          background-color: var(--danger);\n          color: white;\n          padding: var(--space-3) var(--space-4);\n          border-radius: var(--radius-md);\n          box-shadow: var(--shadow-md);\n          z-index: 1000;\n          animation: slideInUp 0.3s ease;\n        }\n        \n        .fade-out {\n          opacity: 0;\n          transition: opacity 0.3s ease;\n        }\n        \n        @keyframes fadeIn {\n          from { opacity: 0; transform: translateY(10px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        \n        @keyframes slideInUp {\n          from { transform: translateY(20px); opacity: 0; }\n          to { transform: translateY(0); opacity: 1; }\n        }\n        \n        @media (max-width: 768px) {\n          .chat-container {\n            max-height: calc(100vh - 250px);\n          }\n        }\n        \n        /* Stili per i disclaimer */\n        .ai-disclaimer {\n          background-color: rgba(220, 53, 69, 0.1);\n          padding: 10px 15px;\n          border-radius: 8px;\n          border-left: 3px solid #dc3545;\n          margin-bottom: 15px;\n          font-size: 0.85rem;\n        }\n        \n        .ai-disclaimer .disclaimer-content {\n          display: flex;\n          align-items: center;\n          gap: 5px;\n        }\n        \n        .ai-disclaimer i {\n          color: #dc3545;\n        }\n        \n        .ai-disclaimer strong {\n          color: #dc3545;\n        }\n        \n        .ai-detailed-disclaimer {\n          background-color: #f8f9fa;\n          border-radius: 8px;\n          padding: 12px 15px;\n          margin: 15px 0;\n          border-left: 3px solid #dc3545;\n          font-size: 0.9rem;\n          text-align: left;\n        }\n        \n        .ai-detailed-disclaimer p {\n          margin-bottom: 8px;\n          color: #dc3545;\n        }\n        \n        .ai-detailed-disclaimer ul {\n          margin: 0;\n          padding-left: 20px;\n        }\n        \n        .ai-detailed-disclaimer li {\n          margin-bottom: 5px;\n          color: #555;\n          text-align: left;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n}\n_s(AIAssistant, \"T6eeNVEctIwUyK0FJ40VWw4+fkw=\");\n_c = AIAssistant;\nexport default AIAssistant;\nvar _c;\n$RefreshReg$(_c, \"AIAssistant\");","map":{"version":3,"names":["React","useState","useEffect","useRef","API","jsxDEV","_jsxDEV","AIAssistant","userId","_s","userMessage","setUserMessage","conversation","setConversation","isLoading","setIsLoading","userProfile","setUserProfile","userSymptoms","setUserSymptoms","showIntro","setShowIntro","suggestedQuestions","setSuggestedQuestions","messagesEndRef","chatContainerRef","welcomeMessage","id","text","isAI","fetchUserData","fetchUserSymptoms","savedConversation","localStorage","getItem","JSON","parse","e","console","error","length","setItem","stringify","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","response","get","data","showErrorToast","generateSuggestedQuestions","symptoms","recentSymptoms","slice","customQuestions","map","symptom","description","toLowerCase","generalQuestions","handleSuggestedQuestionClick","question","sendMessageToAI","messageToSend","messageText","trim","newUserMessage","role","content","updatedConversation","setTimeout","log","post","message","reply","errorOccurred","Error","apiError","prepareContext","profile","symptomSummary","summarizeSymptoms","symptomsGrouped","forEach","s","push","intensity","Object","keys","desc","avgIntensity","calculateAverage","occurrences","arr","reduce","a","b","handleKeyPress","key","shiftKey","preventDefault","useSuggestedQuestion","_document$getElementB","document","getElementById","focus","toast","createElement","className","textContent","body","appendChild","classList","add","removeChild","clearConversation","window","confirm","removeItem","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","ref","index","Date","toLocaleTimeString","hour","minute","placeholder","value","onChange","target","onKeyPress","rows","disabled","_c","$RefreshReg$"],"sources":["C:/Users/39338/salus/salus-frontend/src/AIAssistant.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport API from './api';\n\nfunction AIAssistant({ userId }) {\n  const [userMessage, setUserMessage] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [userProfile, setUserProfile] = useState(null);\n  const [userSymptoms, setUserSymptoms] = useState([]);\n  const [showIntro, setShowIntro] = useState(true);\n  const [suggestedQuestions, setSuggestedQuestions] = useState([\n    \"Come posso alleviare il mal di testa?\",\n    \"Quali sono i sintomi più comuni dell'influenza?\",\n    \"Dovresti consultare un medico per mal di stomaco persistente?\",\n    \"Come posso migliorare la qualità del sonno?\",\n    \"Quali sono i benefici dell'esercizio fisico regolare?\"\n  ]);\n  \n  const messagesEndRef = useRef(null);\n  const chatContainerRef = useRef(null);\n\n  // Messaggio di benvenuto\n  const welcomeMessage = {\n    id: 'welcome',\n    text: 'Ciao! Sono Salus, il tuo assistente personale per la salute. Posso aiutarti a monitorare i tuoi sintomi, rispondere a domande mediche generali, e fornirti informazioni sui tuoi dati di salute. Ricorda che non posso sostituire un medico - le mie risposte sono solo informative e mai diagnostiche. Come posso aiutarti oggi?',\n    isAI: true\n  };\n\n  // Carica i dati dell'utente all'avvio\n  useEffect(() => {\n    if (userId) {\n      fetchUserData();\n      fetchUserSymptoms();\n      \n      // Carica la conversazione precedente dal localStorage\n      const savedConversation = localStorage.getItem(`aiConversation_${userId}`);\n      if (savedConversation) {\n        try {\n          setConversation(JSON.parse(savedConversation));\n          setShowIntro(false);\n        } catch (e) {\n          console.error('Errore nel parsing della conversazione salvata:', e);\n        }\n      }\n    }\n  }, [userId]);\n\n  // Salva la conversazione nel localStorage quando cambia\n  useEffect(() => {\n    if (userId && conversation.length > 0) {\n      localStorage.setItem(`aiConversation_${userId}`, JSON.stringify(conversation));\n    }\n  }, [conversation, userId]);\n\n  // Scroll automatico alla fine della conversazione\n  useEffect(() => {\n    scrollToBottom();\n  }, [conversation, isLoading]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const fetchUserData = async () => {\n    try {\n      const response = await API.get(`/auth/users/${userId}`);\n      setUserProfile(response.data);\n    } catch (error) {\n      console.error('Errore nel caricamento del profilo:', error);\n      showErrorToast('Impossibile caricare il profilo utente');\n    }\n  };\n\n  const fetchUserSymptoms = async () => {\n    try {\n      const response = await API.get(`/symptoms/${userId}`);\n      setUserSymptoms(response.data);\n      \n      // Genera domande suggerite in base ai sintomi\n      if (response.data.length > 0) {\n        generateSuggestedQuestions(response.data);\n      }\n    } catch (error) {\n      console.error('Errore nel caricamento dei sintomi:', error);\n      showErrorToast('Impossibile caricare i sintomi');\n    }\n  };\n\n  const generateSuggestedQuestions = (symptoms) => {\n    if (symptoms.length === 0) return;\n    \n    // Prendi i sintomi più recenti\n    const recentSymptoms = symptoms.slice(0, 3);\n    \n    // Genera domande personalizzate\n    const customQuestions = recentSymptoms.map(symptom => \n      `Come posso gestire il mio ${symptom.description.toLowerCase()}?`\n    );\n    \n    // Aggiungi domande generali\n    const generalQuestions = [\n      \"Quali sono i pattern nei miei sintomi?\",\n      \"Dovrei essere preoccupato per questi sintomi?\",\n      \"Cosa posso fare per migliorare il mio benessere generale?\"\n    ];\n    \n    setSuggestedQuestions([...customQuestions, ...generalQuestions].slice(0, 5));\n  };\n\n  const handleSuggestedQuestionClick = (question) => {\n    setUserMessage(question);\n    sendMessageToAI(question);\n  };\n\n  const sendMessageToAI = async (messageToSend = null) => {\n    const messageText = messageToSend || userMessage;\n    if (!messageText.trim() && !isLoading) return;\n    \n    // Aggiungi il messaggio utente alla conversazione\n    const newUserMessage = { role: 'user', content: messageText };\n    const updatedConversation = [...conversation, newUserMessage];\n    setConversation(updatedConversation);\n    if (!messageToSend) setUserMessage('');\n    setShowIntro(false);\n    \n    // Prepara il contesto per OpenAI\n    setIsLoading(true);\n    \n    try {\n      // Animazione di \"sta scrivendo\"\n      setTimeout(() => {\n        scrollToBottom();\n      }, 100);\n      \n      // Chiamata all'API\n      console.log('Invio messaggio all\\'AI:', messageText);\n      \n      try {\n        const response = await API.post('/ai/chat', {\n          message: messageText\n        });\n        \n        console.log('Risposta ricevuta:', response.data);\n        \n        // Se c'è una risposta, aggiungila alla conversazione\n        if (response.data && response.data.reply) {\n          // Aggiungi la risposta alla conversazione\n          setConversation([\n            ...updatedConversation, \n            { role: 'assistant', content: response.data.reply }\n          ]);\n          \n          // Se c'è stato un errore nel backend ma abbiamo comunque una risposta di fallback\n          if (response.data.errorOccurred) {\n            showErrorToast('C\\'è stato un problema con l\\'assistente AI, ma ho comunque cercato di rispondere al meglio.');\n          }\n        } else {\n          throw new Error('Risposta AI non valida');\n        }\n      } catch (apiError) {\n        console.error('Errore nella chiamata API:', apiError);\n        // Utilizziamo una risposta predefinita per mantenere l'utente informato\n        setConversation([\n          ...updatedConversation, \n          { \n            role: 'assistant', \n            content: 'Mi dispiace, sto riscontrando problemi tecnici nel rispondere alla tua domanda. Come assistente per la salute, posso comunque ricordarti che è sempre consigliabile consultare un medico per qualsiasi preoccupazione relativa alla tua salute. Riprova più tardi con la tua domanda.',\n            error: true\n          }\n        ]);\n        \n        showErrorToast('Problema di connessione con l\\'assistente AI. Riprova più tardi.');\n      }\n    } catch (error) {\n      console.error('Errore nella chiamata AI:', error);\n      setConversation([\n        ...updatedConversation, \n        { \n          role: 'assistant', \n          content: 'Mi dispiace, si è verificato un errore imprevisto. Il nostro team è stato notificato del problema. Riprova più tardi o contatta l\\'assistenza se il problema persiste.',\n          error: true\n        }\n      ]);\n      showErrorToast('Errore nella comunicazione con l\\'assistente: ' + (error.message || 'Errore sconosciuto'));\n    } finally {\n      setIsLoading(false);\n      setTimeout(() => {\n        scrollToBottom();\n      }, 100);\n    }\n  };\n  \n  // Prepara il contesto con i dati dell'utente\n  const prepareContext = () => {\n    const recentSymptoms = userSymptoms.slice(0, 5);\n    return {\n      profile: userProfile,\n      recentSymptoms: recentSymptoms,\n      symptomSummary: summarizeSymptoms(userSymptoms)\n    };\n  };\n  \n  // Crea un riepilogo dei sintomi\n  const summarizeSymptoms = (symptoms) => {\n    const symptomsGrouped = {};\n    symptoms.forEach(s => {\n      if (!symptomsGrouped[s.description]) {\n        symptomsGrouped[s.description] = [];\n      }\n      symptomsGrouped[s.description].push(s.intensity);\n    });\n    \n    return Object.keys(symptomsGrouped).map(desc => ({\n      description: desc,\n      avgIntensity: calculateAverage(symptomsGrouped[desc]),\n      occurrences: symptomsGrouped[desc].length\n    }));\n  };\n  \n  const calculateAverage = (arr) => {\n    return arr.reduce((a, b) => a + b, 0) / arr.length;\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessageToAI();\n    }\n  };\n  \n  const useSuggestedQuestion = (question) => {\n    setUserMessage(question);\n    // Focus all'input\n    document.getElementById('messageInput')?.focus();\n  };\n  \n  const showErrorToast = (message) => {\n    // Implementazione semplice di un toast di errore\n    const toast = document.createElement('div');\n    toast.className = 'error-toast';\n    toast.textContent = message;\n    document.body.appendChild(toast);\n    \n    setTimeout(() => {\n      toast.classList.add('fade-out');\n      setTimeout(() => {\n        document.body.removeChild(toast);\n      }, 300);\n    }, 3000);\n  };\n  \n  const clearConversation = () => {\n    if (window.confirm('Sei sicuro di voler cancellare tutta la conversazione?')) {\n      setConversation([]);\n      setShowIntro(true);\n      localStorage.removeItem(`aiConversation_${userId}`);\n    }\n  };\n\n  return (\n    <div className=\"ai-assistant-container\">\n      <div className=\"ai-header\">\n        <div className=\"ai-identity\">\n          <div className=\"salus-logo-container\">\n            <img src=\"/logo.svg\" alt=\"Salus Logo\" className=\"salus-logo\" />\n          </div>\n          <span className=\"ai-assistant-name\">Salus</span>\n        </div>\n        <button \n          onClick={clearConversation} \n          className=\"btn btn-sm btn-outline\"\n          title=\"Cancella conversazione\"\n        >\n          <i className=\"fas fa-trash-alt\"></i>\n        </button>\n      </div>\n      \n      {/* Disclaimer medico */}\n      <div className=\"ai-disclaimer\">\n        <div className=\"disclaimer-content\">\n          <i className=\"fas fa-stethoscope\"></i> <strong>Nota importante:</strong> L'assistente Salus fornisce informazioni generali ma <strong>non sostituisce il parere medico professionale</strong>. Consulta sempre un medico per diagnosi e trattamenti.\n        </div>\n      </div>\n      \n      <div className=\"chat-container\" ref={chatContainerRef}>\n        {showIntro && (\n          <div className=\"intro-container\">\n            <div className=\"salus-logo-large-container\">\n              <img src=\"/logo.svg\" alt=\"Salus Logo\" className=\"salus-logo-large\" />\n            </div>\n            <h3>{welcomeMessage.text}</h3>\n            \n            {/* Disclaimer dettagliato nell'introduzione */}\n            <div className=\"ai-detailed-disclaimer\">\n              <p><i className=\"fas fa-exclamation-triangle\"></i> <strong>Ricorda:</strong></p>\n              <ul>\n                <li>Non posso fornire diagnosi mediche o prescrizioni.</li>\n                <li>Le informazioni che fornisco sono di carattere generale.</li>\n                <li>In caso di emergenza, chiama immediatamente il 118.</li>\n                <li>Consulta sempre un medico per i tuoi problemi di salute.</li>\n                <li>Non ritardare mai una visita medica basandoti sui miei consigli.</li>\n              </ul>\n            </div>\n            \n            <div className=\"suggested-questions\">\n              <h4>Domande suggerite:</h4>\n              {suggestedQuestions.map((question, index) => (\n                <button\n                  key={index}\n                  className=\"suggested-question\"\n                  onClick={() => handleSuggestedQuestionClick(question)}\n                >\n                  {question}\n                </button>\n              ))}\n            </div>\n          </div>\n        )}\n        \n        <div className=\"messages-container\">\n          {conversation.length === 0 && !showIntro && (\n            <div className=\"message assistant-message\">\n              <div className=\"message-avatar\">\n                <div className=\"avatar-container\">\n                  <img src=\"/logo.svg\" alt=\"Salus Logo\" className=\"salus-avatar\" />\n                </div>\n              </div>\n              <div className=\"message-content\">\n                <p>{welcomeMessage.text}</p>\n              </div>\n            </div>\n          )}\n          \n          {conversation.map((message, index) => (\n            <div key={index} className={`message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`}>\n              {message.role === 'assistant' && (\n                <div className=\"message-avatar\">\n                  <div className=\"avatar-container\">\n                    <img src=\"/logo.svg\" alt=\"Salus Logo\" className=\"salus-avatar\" />\n                  </div>\n                </div>\n              )}\n              <div className={`message-content ${message.error ? 'error' : ''}`}>\n                <p>{message.content}</p>\n                <div className=\"message-time\">\n                  {new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}\n                </div>\n              </div>\n            </div>\n          ))}\n          \n          {isLoading && (\n            <div className=\"message assistant-message\">\n              <div className=\"message-avatar\">\n                <div className=\"avatar-container\">\n                  <img src=\"/logo.svg\" alt=\"Salus Logo\" className=\"salus-avatar\" />\n                </div>\n              </div>\n              <div className=\"message-content\">\n                <div className=\"typing-indicator\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            </div>\n          )}\n          <div ref={messagesEndRef} />\n        </div>\n      </div>\n      \n      <div className=\"input-container\">\n        <textarea\n          id=\"messageInput\"\n          className=\"message-input\"\n          placeholder=\"Scrivi un messaggio...\"\n          value={userMessage}\n          onChange={(e) => setUserMessage(e.target.value)}\n          onKeyPress={handleKeyPress}\n          rows={1}\n        />\n        <button\n          className=\"send-button\"\n          onClick={() => sendMessageToAI()}\n          disabled={isLoading || !userMessage.trim()}\n        >\n          <i className=\"fas fa-paper-plane\"></i>\n        </button>\n      </div>\n      \n      <div className=\"powered-by\">\n        Powered by <span className=\"brand\">OpenAI</span> <i className=\"fas fa-bolt\"></i>\n      </div>\n      \n      {/* Stili specifici del componente */}\n      <style>{`\n        .ai-assistant-container {\n          padding: var(--space-3);\n          display: flex;\n          flex-direction: column;\n          height: 100%;\n        }\n        \n        .ai-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: var(--space-4);\n          padding-bottom: var(--space-3);\n          border-bottom: 1px solid var(--gray-200);\n        }\n        \n        .ai-identity {\n          display: flex;\n          align-items: center;\n          gap: var(--space-2);\n        }\n        \n        .ai-assistant-name {\n          font-size: 1.2rem;\n          font-weight: 600;\n          color: var(--primary-600);\n        }\n        \n        .salus-logo-container {\n          width: 36px;\n          height: 36px;\n          border-radius: 50%;\n          background-color: white;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n          overflow: hidden;\n        }\n        \n        .salus-logo {\n          width: 28px;\n          height: 28px;\n          object-fit: contain;\n        }\n        \n        .salus-logo-large-container {\n          width: 100px;\n          height: 100px;\n          border-radius: 50%;\n          background-color: white;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n          margin: 0 auto 20px;\n          overflow: hidden;\n        }\n        \n        .salus-logo-large {\n          width: 80px;\n          height: 80px;\n          object-fit: contain;\n        }\n        \n        .avatar-container {\n          width: 36px;\n          height: 36px;\n          border-radius: 50%;\n          background-color: white;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n          overflow: hidden;\n        }\n        \n        .salus-avatar {\n          width: 28px;\n          height: 28px;\n          object-fit: contain;\n        }\n        \n        .chat-container {\n          display: flex;\n          flex-direction: column;\n          flex: 1;\n          min-height: 300px;\n          max-height: calc(100vh - 300px);\n          border-radius: var(--radius-lg);\n          overflow: hidden;\n          background-color: var(--gray-100);\n          box-shadow: var(--shadow-md);\n          border: 1px solid var(--gray-200);\n        }\n        \n        .messages-container {\n          flex: 1;\n          overflow-y: auto;\n          padding: var(--space-4);\n          display: flex;\n          flex-direction: column;\n          gap: var(--space-3);\n        }\n        \n        .message {\n          display: flex;\n          max-width: 85%;\n          margin-bottom: var(--space-3);\n          animation: fadeIn 0.3s ease;\n        }\n        \n        .user-message {\n          margin-left: auto;\n          flex-direction: row-reverse;\n        }\n        \n        .assistant-message {\n          margin-right: auto;\n        }\n        \n        .message-avatar {\n          display: flex;\n          align-items: flex-start;\n          margin-right: var(--space-2);\n        }\n        \n        .message-content {\n          background-color: var(--white);\n          padding: var(--space-3);\n          border-radius: var(--radius-lg);\n          box-shadow: var(--shadow-sm);\n          position: relative;\n          min-width: 80px;\n        }\n        \n        .user-message .message-content {\n          background-color: var(--primary-600);\n          color: var(--white);\n          border-bottom-right-radius: var(--space-1);\n        }\n        \n        .assistant-message .message-content {\n          background-color: var(--white);\n          border-bottom-left-radius: var(--space-1);\n        }\n        \n        .message-error .message-content {\n          background-color: var(--danger);\n          color: var(--white);\n        }\n        \n        .message-time {\n          font-size: 0.7rem;\n          color: var(--gray-500);\n          margin-top: var(--space-1);\n          text-align: right;\n        }\n        \n        .user-message .message-time {\n          color: rgba(255, 255, 255, 0.7);\n        }\n        \n        .typing-indicator {\n          display: flex;\n          align-items: center;\n          justify-content: flex-start;\n          gap: 5px;\n          padding: 8px 0;\n        }\n        \n        .typing-indicator span {\n          width: 8px;\n          height: 8px;\n          background-color: var(--primary-600);\n          border-radius: 50%;\n          display: inline-block;\n          opacity: 0.6;\n          animation: typing 1.4s infinite both;\n        }\n        \n        .typing-indicator span:nth-child(2) {\n          animation-delay: 0.2s;\n        }\n        \n        .typing-indicator span:nth-child(3) {\n          animation-delay: 0.4s;\n        }\n        \n        @keyframes typing {\n          0% { transform: scale(1); }\n          50% { transform: scale(1.5); }\n          100% { transform: scale(1); }\n        }\n        \n        .intro-container {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          padding: var(--space-4);\n          background-color: var(--white);\n          border-radius: var(--radius-lg);\n          margin: var(--space-3);\n          box-shadow: var(--shadow-md);\n          text-align: center;\n        }\n        \n        .intro-container h3 {\n          margin-top: 0;\n          margin-bottom: var(--space-3);\n          color: var(--gray-900);\n          font-size: 1.1rem;\n          line-height: 1.5;\n        }\n        \n        .suggested-questions {\n          width: 100%;\n          margin-top: var(--space-4);\n        }\n        \n        .suggested-questions h4 {\n          margin-bottom: var(--space-2);\n          color: var(--gray-700);\n          font-size: 0.9rem;\n        }\n        \n        .suggested-question {\n          display: block;\n          width: 100%;\n          padding: var(--space-2) var(--space-3);\n          margin-bottom: var(--space-2);\n          border: 1px solid var(--primary-200);\n          background-color: var(--primary-50);\n          border-radius: var(--radius-md);\n          text-align: left;\n          transition: all 0.2s ease;\n          font-size: 0.9rem;\n          cursor: pointer;\n        }\n        \n        .suggested-question:hover {\n          background-color: var(--primary-100);\n          border-color: var(--primary-300);\n        }\n        \n        .input-container {\n          display: flex;\n          margin-top: var(--space-3);\n          border: 1px solid var(--gray-300);\n          border-radius: var(--radius-lg);\n          background-color: var(--white);\n          padding: var(--space-2);\n          box-shadow: var(--shadow-md);\n        }\n        \n        .message-input {\n          flex: 1;\n          border: none;\n          padding: var(--space-2);\n          font-size: 0.95rem;\n          resize: none;\n          max-height: 100px;\n          overflow-y: auto;\n          background: transparent;\n        }\n        \n        .message-input:focus {\n          outline: none;\n        }\n        \n        .send-button {\n          background-color: var(--primary-600);\n          color: white;\n          border: none;\n          width: 36px;\n          height: 36px;\n          border-radius: 50%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          cursor: pointer;\n          transition: background-color 0.2s ease;\n        }\n        \n        .send-button:hover {\n          background-color: var(--primary-700);\n        }\n        \n        .send-button:disabled {\n          background-color: var(--gray-400);\n          cursor: not-allowed;\n        }\n        \n        .powered-by {\n          text-align: center;\n          font-size: var(--font-size-xs);\n          color: var(--gray-500);\n          margin-top: var(--space-3);\n        }\n        \n        .brand {\n          font-weight: 600;\n          color: var(--gray-700);\n        }\n        \n        .error-toast {\n          position: fixed;\n          bottom: 20px;\n          right: 20px;\n          background-color: var(--danger);\n          color: white;\n          padding: var(--space-3) var(--space-4);\n          border-radius: var(--radius-md);\n          box-shadow: var(--shadow-md);\n          z-index: 1000;\n          animation: slideInUp 0.3s ease;\n        }\n        \n        .fade-out {\n          opacity: 0;\n          transition: opacity 0.3s ease;\n        }\n        \n        @keyframes fadeIn {\n          from { opacity: 0; transform: translateY(10px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        \n        @keyframes slideInUp {\n          from { transform: translateY(20px); opacity: 0; }\n          to { transform: translateY(0); opacity: 1; }\n        }\n        \n        @media (max-width: 768px) {\n          .chat-container {\n            max-height: calc(100vh - 250px);\n          }\n        }\n        \n        /* Stili per i disclaimer */\n        .ai-disclaimer {\n          background-color: rgba(220, 53, 69, 0.1);\n          padding: 10px 15px;\n          border-radius: 8px;\n          border-left: 3px solid #dc3545;\n          margin-bottom: 15px;\n          font-size: 0.85rem;\n        }\n        \n        .ai-disclaimer .disclaimer-content {\n          display: flex;\n          align-items: center;\n          gap: 5px;\n        }\n        \n        .ai-disclaimer i {\n          color: #dc3545;\n        }\n        \n        .ai-disclaimer strong {\n          color: #dc3545;\n        }\n        \n        .ai-detailed-disclaimer {\n          background-color: #f8f9fa;\n          border-radius: 8px;\n          padding: 12px 15px;\n          margin: 15px 0;\n          border-left: 3px solid #dc3545;\n          font-size: 0.9rem;\n          text-align: left;\n        }\n        \n        .ai-detailed-disclaimer p {\n          margin-bottom: 8px;\n          color: #dc3545;\n        }\n        \n        .ai-detailed-disclaimer ul {\n          margin: 0;\n          padding-left: 20px;\n        }\n        \n        .ai-detailed-disclaimer li {\n          margin-bottom: 5px;\n          color: #555;\n          text-align: left;\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default AIAssistant; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}