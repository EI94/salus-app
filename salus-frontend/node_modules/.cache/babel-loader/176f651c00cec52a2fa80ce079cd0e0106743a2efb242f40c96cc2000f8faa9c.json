{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\39338\\\\salus\\\\salus-frontend\\\\src\\\\NotificationCenter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport API from './api';\n\n/**\r\n * Centro Notifiche avanzato per Salus\r\n * \r\n * Mostra notifiche interattive categorizzate con priorità e azioni immediate\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NotificationCenter({\n  userId,\n  isOpen,\n  onClose,\n  language,\n  darkMode\n}) {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [activeCategory, setActiveCategory] = useState('all');\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Dizionario traduzioni\n  const translations = {\n    it: {\n      title: 'Notifiche',\n      noNotifications: 'Non hai notifiche',\n      markAllRead: 'Segna tutte come lette',\n      categories: {\n        all: 'Tutte',\n        urgent: 'Urgenti',\n        medication: 'Farmaci',\n        appointment: 'Appuntamenti',\n        wellness: 'Benessere'\n      },\n      actions: {\n        dismiss: 'Ignora',\n        view: 'Visualizza',\n        take: 'Prendi',\n        reschedule: 'Riprogramma'\n      },\n      timeLabels: {\n        now: 'Adesso',\n        minutesAgo: 'minuti fa',\n        hoursAgo: 'ore fa',\n        yesterday: 'Ieri',\n        daysAgo: 'giorni fa'\n      }\n    },\n    en: {\n      title: 'Notifications',\n      noNotifications: 'You have no notifications',\n      markAllRead: 'Mark all as read',\n      categories: {\n        all: 'All',\n        urgent: 'Urgent',\n        medication: 'Medications',\n        appointment: 'Appointments',\n        wellness: 'Wellness'\n      },\n      actions: {\n        dismiss: 'Dismiss',\n        view: 'View',\n        take: 'Take',\n        reschedule: 'Reschedule'\n      },\n      timeLabels: {\n        now: 'Now',\n        minutesAgo: 'minutes ago',\n        hoursAgo: 'hours ago',\n        yesterday: 'Yesterday',\n        daysAgo: 'days ago'\n      }\n    },\n    es: {\n      title: 'Notificaciones',\n      noNotifications: 'No tienes notificaciones',\n      markAllRead: 'Marcar todas como leídas',\n      categories: {\n        all: 'Todas',\n        urgent: 'Urgentes',\n        medication: 'Medicamentos',\n        appointment: 'Citas',\n        wellness: 'Bienestar'\n      },\n      actions: {\n        dismiss: 'Ignorar',\n        view: 'Ver',\n        take: 'Tomar',\n        reschedule: 'Reprogramar'\n      },\n      timeLabels: {\n        now: 'Ahora',\n        minutesAgo: 'minutos atrás',\n        hoursAgo: 'horas atrás',\n        yesterday: 'Ayer',\n        daysAgo: 'días atrás'\n      }\n    }\n  };\n\n  // Funzione per ottenere le traduzioni nella lingua selezionata\n  const t = (key, category = null) => {\n    var _translations$languag3;\n    if (category) {\n      var _translations$languag, _translations$languag2;\n      return ((_translations$languag = translations[language]) === null || _translations$languag === void 0 ? void 0 : (_translations$languag2 = _translations$languag[category]) === null || _translations$languag2 === void 0 ? void 0 : _translations$languag2[key]) || translations['it'][category][key] || key;\n    }\n    return ((_translations$languag3 = translations[language]) === null || _translations$languag3 === void 0 ? void 0 : _translations$languag3[key]) || translations['it'][key] || key;\n  };\n\n  // Simula il recupero delle notifiche dal backend\n  useEffect(() => {\n    if (!userId || !isOpen) return;\n    setIsLoading(true);\n\n    // In una vera implementazione, questa sarebbe una chiamata API\n    const fetchNotifications = async () => {\n      try {\n        // Simuliamo un ritardo di rete\n        await new Promise(resolve => setTimeout(resolve, 600));\n\n        // In un'app reale, questo sarebbe API.get(`/notifications/${userId}`)\n        const mockNotifications = generateMockNotifications();\n        setNotifications(mockNotifications);\n      } catch (error) {\n        console.error('Errore nel recupero delle notifiche:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchNotifications();\n  }, [userId, isOpen]);\n\n  // Funzione per generare notifiche di esempio\n  const generateMockNotifications = () => {\n    const now = new Date();\n    return [{\n      id: '1',\n      title: 'È ora di prendere Aspirina',\n      description: '100mg - Con acqua',\n      category: 'medication',\n      priority: 'high',\n      unread: true,\n      timestamp: new Date(now.getTime() - 5 * 60000),\n      // 5 minuti fa\n      icon: 'pill',\n      color: 'var(--primary-600)',\n      actions: [{\n        type: 'take',\n        label: t('take', 'actions')\n      }, {\n        type: 'skip',\n        label: 'Salta'\n      }],\n      data: {\n        medicationId: 'med123',\n        dose: '100mg'\n      }\n    }, {\n      id: '2',\n      title: 'Promemoria visita medica',\n      description: 'Domani alle 14:30 - Dr. Rossi',\n      category: 'appointment',\n      priority: 'medium',\n      unread: true,\n      timestamp: new Date(now.getTime() - 2 * 3600000),\n      // 2 ore fa\n      icon: 'calendar-check',\n      color: 'var(--info)',\n      actions: [{\n        type: 'view',\n        label: t('view', 'actions')\n      }, {\n        type: 'reschedule',\n        label: t('reschedule', 'actions')\n      }],\n      data: {\n        appointmentId: 'app456',\n        doctor: 'Dr. Rossi',\n        location: 'Via Roma 123'\n      }\n    }, {\n      id: '3',\n      title: 'Mal di testa persistente',\n      description: 'Questo sintomo è stato registrato per 3 giorni consecutivi',\n      category: 'urgent',\n      priority: 'high',\n      unread: true,\n      timestamp: new Date(now.getTime() - 86400000),\n      // 1 giorno fa\n      icon: 'exclamation-triangle',\n      color: 'var(--danger)',\n      actions: [{\n        type: 'view',\n        label: t('view', 'actions')\n      }],\n      data: {\n        symptomId: 'sym789',\n        duration: '3 giorni'\n      }\n    }, {\n      id: '4',\n      title: 'Obiettivo attività fisica raggiunto',\n      description: 'Hai completato 30 minuti di attività fisica oggi',\n      category: 'wellness',\n      priority: 'low',\n      unread: false,\n      timestamp: new Date(now.getTime() - 12 * 3600000),\n      // 12 ore fa\n      icon: 'trophy',\n      color: 'var(--success)',\n      actions: [{\n        type: 'view',\n        label: t('view', 'actions')\n      }, {\n        type: 'dismiss',\n        label: t('dismiss', 'actions')\n      }],\n      data: {\n        goalId: 'goal123',\n        achievement: '30 minuti di attività'\n      }\n    }, {\n      id: '5',\n      title: 'Pressione sanguigna alta',\n      description: 'La tua pressione sistolica è sopra 140 mmHg',\n      category: 'urgent',\n      priority: 'high',\n      unread: false,\n      timestamp: new Date(now.getTime() - 3 * 86400000),\n      // 3 giorni fa\n      icon: 'heartbeat',\n      color: 'var(--danger)',\n      actions: [{\n        type: 'view',\n        label: t('view', 'actions')\n      }],\n      data: {\n        readingId: 'bp123',\n        systolic: 142,\n        diastolic: 88\n      }\n    }];\n  };\n\n  // Funzione per gestire le azioni sulle notifiche\n  const handleNotificationAction = (notificationId, actionType, actionData) => {\n    console.log(`Azione ${actionType} sulla notifica ${notificationId}`, actionData);\n\n    // Esempi di gestione azioni\n    switch (actionType) {\n      case 'take':\n        // Segna il farmaco come preso\n        markMedicationAsTaken(notificationId, actionData);\n        break;\n      case 'view':\n        // Naviga alla pagina rilevante\n        navigateToDetail(notificationId, actionData);\n        break;\n      case 'dismiss':\n        // Rimuovi la notifica\n        dismissNotification(notificationId);\n        break;\n      case 'skip':\n        // Salta dose farmaco\n        skipMedication(notificationId, actionData);\n        break;\n      case 'reschedule':\n        // Apri interfaccia riprogrammazione\n        openRescheduleModal(notificationId, actionData);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Funzioni simulate per la gestione delle azioni\n  const markMedicationAsTaken = (id, data) => {\n    // Qui chiamata API a /medications/taken\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n  const navigateToDetail = (id, data) => {\n    // Qui logica di navigazione\n    const notification = notifications.find(n => n.id === id);\n    if (notification.category === 'medication') {\n      // In un'app vera qui utilizzeremmo la navigazione React Router\n      console.log(`Naviga a /medications/${data.medicationId}`);\n    } else if (notification.category === 'urgent') {\n      console.log(`Naviga a /symptoms/${data.symptomId}`);\n    }\n\n    // Segna come letta\n    markAsRead(id);\n  };\n  const dismissNotification = id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n  const skipMedication = (id, data) => {\n    // Qui chiamata API a /medications/skip\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n  const openRescheduleModal = (id, data) => {\n    // Qui apriremmo un modal per la riprogrammazione\n    console.log(`Apri modal riprogrammazione per ${id}`);\n    // Per ora segniamo solo come letta\n    markAsRead(id);\n  };\n  const markAsRead = id => {\n    setNotifications(prev => prev.map(notification => notification.id === id ? {\n      ...notification,\n      unread: false\n    } : notification));\n  };\n\n  // Segna tutte le notifiche come lette\n  const markAllAsRead = () => {\n    setNotifications(prev => prev.map(notification => ({\n      ...notification,\n      unread: false\n    })));\n  };\n\n  // Filtra notifiche per categoria\n  const filteredNotifications = activeCategory === 'all' ? notifications : notifications.filter(notification => notification.category === activeCategory);\n\n  // Ordina notifiche per priorità e poi per data (più recenti prima)\n  const sortedNotifications = [...filteredNotifications].sort((a, b) => {\n    // Prima per priorità (high > medium > low)\n    const priorityOrder = {\n      high: 3,\n      medium: 2,\n      low: 1\n    };\n    const priorityDiff = priorityOrder[b.priority] - priorityOrder[a.priority];\n    if (priorityDiff !== 0) return priorityDiff;\n\n    // Poi per data (più recenti prima)\n    return b.timestamp - a.timestamp;\n  });\n\n  // Formatta il timestamp in modo relativo e leggibile\n  const formatRelativeTime = timestamp => {\n    const now = new Date();\n    const diffMs = now - timestamp;\n    const diffMin = Math.floor(diffMs / 60000);\n    const diffHours = Math.floor(diffMs / 3600000);\n    const diffDays = Math.floor(diffMs / 86400000);\n    if (diffMin < 1) return t('now', 'timeLabels');\n    if (diffMin < 60) return `${diffMin} ${t('minutesAgo', 'timeLabels')}`;\n    if (diffHours < 24) return `${diffHours} ${t('hoursAgo', 'timeLabels')}`;\n    if (diffDays === 1) return t('yesterday', 'timeLabels');\n    if (diffDays < 7) return `${diffDays} ${t('daysAgo', 'timeLabels')}`;\n\n    // Se più vecchio di 7 giorni, mostra la data\n    return timestamp.toLocaleDateString();\n  };\n\n  // Se il centro notifiche non è aperto, non renderizziamo nulla\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-panel\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"notification-title\",\n          children: t('title')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"notification-close\",\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-categories\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-chip ${activeCategory === 'all' ? 'active' : ''}`,\n          onClick: () => setActiveCategory('all'),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-bell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), \" \", t('all', 'categories')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-chip ${activeCategory === 'urgent' ? 'active' : ''}`,\n          onClick: () => setActiveCategory('urgent'),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-exclamation-triangle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), \" \", t('urgent', 'categories'), notifications.filter(n => n.category === 'urgent' && n.unread).length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"category-badge\",\n            children: notifications.filter(n => n.category === 'urgent' && n.unread).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-chip ${activeCategory === 'medication' ? 'active' : ''}`,\n          onClick: () => setActiveCategory('medication'),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-pills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), \" \", t('medication', 'categories'), notifications.filter(n => n.category === 'medication' && n.unread).length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"category-badge\",\n            children: notifications.filter(n => n.category === 'medication' && n.unread).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-chip ${activeCategory === 'appointment' ? 'active' : ''}`,\n          onClick: () => setActiveCategory('appointment'),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-calendar-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), \" \", t('appointment', 'categories'), notifications.filter(n => n.category === 'appointment' && n.unread).length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"category-badge\",\n            children: notifications.filter(n => n.category === 'appointment' && n.unread).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-chip ${activeCategory === 'wellness' ? 'active' : ''}`,\n          onClick: () => setActiveCategory('wellness'),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-spa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), \" \", t('wellness', 'categories'), notifications.filter(n => n.category === 'wellness' && n.unread).length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"category-badge\",\n            children: notifications.filter(n => n.category === 'wellness' && n.unread).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-list\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Caricamento notifiche...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this) : sortedNotifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-empty\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-bell-slash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: t('noNotifications')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [sortedNotifications.some(n => n.unread) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-text\",\n              onClick: markAllAsRead,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-check-double\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 21\n              }, this), \" \", t('markAllRead')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 17\n          }, this), sortedNotifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `notification-item ${notification.unread ? 'unread' : ''}`,\n            onClick: () => markAsRead(notification.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `priority-indicator priority-${notification.priority}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-icon\",\n              style: {\n                backgroundColor: notification.color\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: `fas fa-${notification.icon}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notification-header-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"notification-item-title\",\n                  children: notification.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"notification-time\",\n                  children: formatRelativeTime(notification.timestamp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"notification-description\",\n                children: notification.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notification-actions\",\n                children: notification.actions.map((action, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `btn-action btn-action-${action.type}`,\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleNotificationAction(notification.id, action.type, notification.data);\n                  },\n                  children: action.label\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 19\n            }, this)]\n          }, notification.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 5\n  }, this);\n}\n_s(NotificationCenter, \"cChSJR/UQ7MQHhtMmrllkV+uetI=\");\n_c = NotificationCenter;\nexport default NotificationCenter;\nvar _c;\n$RefreshReg$(_c, \"NotificationCenter\");","map":{"version":3,"names":["React","useState","useEffect","API","jsxDEV","_jsxDEV","Fragment","_Fragment","NotificationCenter","userId","isOpen","onClose","language","darkMode","_s","notifications","setNotifications","activeCategory","setActiveCategory","isLoading","setIsLoading","translations","it","title","noNotifications","markAllRead","categories","all","urgent","medication","appointment","wellness","actions","dismiss","view","take","reschedule","timeLabels","now","minutesAgo","hoursAgo","yesterday","daysAgo","en","es","t","key","category","_translations$languag3","_translations$languag","_translations$languag2","fetchNotifications","Promise","resolve","setTimeout","mockNotifications","generateMockNotifications","error","console","Date","id","description","priority","unread","timestamp","getTime","icon","color","type","label","data","medicationId","dose","appointmentId","doctor","location","symptomId","duration","goalId","achievement","readingId","systolic","diastolic","handleNotificationAction","notificationId","actionType","actionData","log","markMedicationAsTaken","navigateToDetail","dismissNotification","skipMedication","openRescheduleModal","prev","filter","notification","find","n","markAsRead","map","markAllAsRead","filteredNotifications","sortedNotifications","sort","a","b","priorityOrder","high","medium","low","priorityDiff","formatRelativeTime","diffMs","diffMin","Math","floor","diffHours","diffDays","toLocaleDateString","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","length","some","style","backgroundColor","action","index","_c","$RefreshReg$"],"sources":["C:/Users/39338/salus/salus-frontend/src/NotificationCenter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport API from './api';\r\n\r\n/**\r\n * Centro Notifiche avanzato per Salus\r\n * \r\n * Mostra notifiche interattive categorizzate con priorità e azioni immediate\r\n */\r\nfunction NotificationCenter({ userId, isOpen, onClose, language, darkMode }) {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [activeCategory, setActiveCategory] = useState('all');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Dizionario traduzioni\r\n  const translations = {\r\n    it: {\r\n      title: 'Notifiche',\r\n      noNotifications: 'Non hai notifiche',\r\n      markAllRead: 'Segna tutte come lette',\r\n      categories: {\r\n        all: 'Tutte',\r\n        urgent: 'Urgenti',\r\n        medication: 'Farmaci',\r\n        appointment: 'Appuntamenti',\r\n        wellness: 'Benessere'\r\n      },\r\n      actions: {\r\n        dismiss: 'Ignora',\r\n        view: 'Visualizza',\r\n        take: 'Prendi',\r\n        reschedule: 'Riprogramma'\r\n      },\r\n      timeLabels: {\r\n        now: 'Adesso',\r\n        minutesAgo: 'minuti fa',\r\n        hoursAgo: 'ore fa',\r\n        yesterday: 'Ieri',\r\n        daysAgo: 'giorni fa'\r\n      }\r\n    },\r\n    en: {\r\n      title: 'Notifications',\r\n      noNotifications: 'You have no notifications',\r\n      markAllRead: 'Mark all as read',\r\n      categories: {\r\n        all: 'All',\r\n        urgent: 'Urgent',\r\n        medication: 'Medications',\r\n        appointment: 'Appointments',\r\n        wellness: 'Wellness'\r\n      },\r\n      actions: {\r\n        dismiss: 'Dismiss',\r\n        view: 'View',\r\n        take: 'Take',\r\n        reschedule: 'Reschedule'\r\n      },\r\n      timeLabels: {\r\n        now: 'Now',\r\n        minutesAgo: 'minutes ago',\r\n        hoursAgo: 'hours ago',\r\n        yesterday: 'Yesterday',\r\n        daysAgo: 'days ago'\r\n      }\r\n    },\r\n    es: {\r\n      title: 'Notificaciones',\r\n      noNotifications: 'No tienes notificaciones',\r\n      markAllRead: 'Marcar todas como leídas',\r\n      categories: {\r\n        all: 'Todas',\r\n        urgent: 'Urgentes',\r\n        medication: 'Medicamentos',\r\n        appointment: 'Citas',\r\n        wellness: 'Bienestar'\r\n      },\r\n      actions: {\r\n        dismiss: 'Ignorar',\r\n        view: 'Ver',\r\n        take: 'Tomar',\r\n        reschedule: 'Reprogramar'\r\n      },\r\n      timeLabels: {\r\n        now: 'Ahora',\r\n        minutesAgo: 'minutos atrás',\r\n        hoursAgo: 'horas atrás',\r\n        yesterday: 'Ayer',\r\n        daysAgo: 'días atrás'\r\n      }\r\n    }\r\n  };\r\n\r\n  // Funzione per ottenere le traduzioni nella lingua selezionata\r\n  const t = (key, category = null) => {\r\n    if (category) {\r\n      return translations[language]?.[category]?.[key] || \r\n             translations['it'][category][key] || \r\n             key;\r\n    }\r\n    return translations[language]?.[key] || \r\n           translations['it'][key] || \r\n           key;\r\n  };\r\n\r\n  // Simula il recupero delle notifiche dal backend\r\n  useEffect(() => {\r\n    if (!userId || !isOpen) return;\r\n    \r\n    setIsLoading(true);\r\n    \r\n    // In una vera implementazione, questa sarebbe una chiamata API\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        // Simuliamo un ritardo di rete\r\n        await new Promise(resolve => setTimeout(resolve, 600));\r\n        \r\n        // In un'app reale, questo sarebbe API.get(`/notifications/${userId}`)\r\n        const mockNotifications = generateMockNotifications();\r\n        setNotifications(mockNotifications);\r\n      } catch (error) {\r\n        console.error('Errore nel recupero delle notifiche:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchNotifications();\r\n  }, [userId, isOpen]);\r\n  \r\n  // Funzione per generare notifiche di esempio\r\n  const generateMockNotifications = () => {\r\n    const now = new Date();\r\n    \r\n    return [\r\n      {\r\n        id: '1',\r\n        title: 'È ora di prendere Aspirina',\r\n        description: '100mg - Con acqua',\r\n        category: 'medication',\r\n        priority: 'high',\r\n        unread: true,\r\n        timestamp: new Date(now.getTime() - 5 * 60000), // 5 minuti fa\r\n        icon: 'pill',\r\n        color: 'var(--primary-600)',\r\n        actions: [\r\n          { type: 'take', label: t('take', 'actions') },\r\n          { type: 'skip', label: 'Salta' }\r\n        ],\r\n        data: {\r\n          medicationId: 'med123',\r\n          dose: '100mg'\r\n        }\r\n      },\r\n      {\r\n        id: '2',\r\n        title: 'Promemoria visita medica',\r\n        description: 'Domani alle 14:30 - Dr. Rossi',\r\n        category: 'appointment',\r\n        priority: 'medium',\r\n        unread: true,\r\n        timestamp: new Date(now.getTime() - 2 * 3600000), // 2 ore fa\r\n        icon: 'calendar-check',\r\n        color: 'var(--info)',\r\n        actions: [\r\n          { type: 'view', label: t('view', 'actions') },\r\n          { type: 'reschedule', label: t('reschedule', 'actions') }\r\n        ],\r\n        data: {\r\n          appointmentId: 'app456',\r\n          doctor: 'Dr. Rossi',\r\n          location: 'Via Roma 123'\r\n        }\r\n      },\r\n      {\r\n        id: '3',\r\n        title: 'Mal di testa persistente',\r\n        description: 'Questo sintomo è stato registrato per 3 giorni consecutivi',\r\n        category: 'urgent',\r\n        priority: 'high',\r\n        unread: true,\r\n        timestamp: new Date(now.getTime() - 86400000), // 1 giorno fa\r\n        icon: 'exclamation-triangle',\r\n        color: 'var(--danger)',\r\n        actions: [\r\n          { type: 'view', label: t('view', 'actions') }\r\n        ],\r\n        data: {\r\n          symptomId: 'sym789',\r\n          duration: '3 giorni'\r\n        }\r\n      },\r\n      {\r\n        id: '4',\r\n        title: 'Obiettivo attività fisica raggiunto',\r\n        description: 'Hai completato 30 minuti di attività fisica oggi',\r\n        category: 'wellness',\r\n        priority: 'low',\r\n        unread: false,\r\n        timestamp: new Date(now.getTime() - 12 * 3600000), // 12 ore fa\r\n        icon: 'trophy',\r\n        color: 'var(--success)',\r\n        actions: [\r\n          { type: 'view', label: t('view', 'actions') },\r\n          { type: 'dismiss', label: t('dismiss', 'actions') }\r\n        ],\r\n        data: {\r\n          goalId: 'goal123',\r\n          achievement: '30 minuti di attività'\r\n        }\r\n      },\r\n      {\r\n        id: '5',\r\n        title: 'Pressione sanguigna alta',\r\n        description: 'La tua pressione sistolica è sopra 140 mmHg',\r\n        category: 'urgent',\r\n        priority: 'high',\r\n        unread: false,\r\n        timestamp: new Date(now.getTime() - 3 * 86400000), // 3 giorni fa\r\n        icon: 'heartbeat',\r\n        color: 'var(--danger)',\r\n        actions: [\r\n          { type: 'view', label: t('view', 'actions') }\r\n        ],\r\n        data: {\r\n          readingId: 'bp123',\r\n          systolic: 142,\r\n          diastolic: 88\r\n        }\r\n      }\r\n    ];\r\n  };\r\n\r\n  // Funzione per gestire le azioni sulle notifiche\r\n  const handleNotificationAction = (notificationId, actionType, actionData) => {\r\n    console.log(`Azione ${actionType} sulla notifica ${notificationId}`, actionData);\r\n    \r\n    // Esempi di gestione azioni\r\n    switch (actionType) {\r\n      case 'take':\r\n        // Segna il farmaco come preso\r\n        markMedicationAsTaken(notificationId, actionData);\r\n        break;\r\n      case 'view':\r\n        // Naviga alla pagina rilevante\r\n        navigateToDetail(notificationId, actionData);\r\n        break;\r\n      case 'dismiss':\r\n        // Rimuovi la notifica\r\n        dismissNotification(notificationId);\r\n        break;\r\n      case 'skip':\r\n        // Salta dose farmaco\r\n        skipMedication(notificationId, actionData);\r\n        break;\r\n      case 'reschedule':\r\n        // Apri interfaccia riprogrammazione\r\n        openRescheduleModal(notificationId, actionData);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  \r\n  // Funzioni simulate per la gestione delle azioni\r\n  const markMedicationAsTaken = (id, data) => {\r\n    // Qui chiamata API a /medications/taken\r\n    setNotifications(prev => \r\n      prev.filter(notification => notification.id !== id)\r\n    );\r\n  };\r\n  \r\n  const navigateToDetail = (id, data) => {\r\n    // Qui logica di navigazione\r\n    const notification = notifications.find(n => n.id === id);\r\n    \r\n    if (notification.category === 'medication') {\r\n      // In un'app vera qui utilizzeremmo la navigazione React Router\r\n      console.log(`Naviga a /medications/${data.medicationId}`);\r\n    } else if (notification.category === 'urgent') {\r\n      console.log(`Naviga a /symptoms/${data.symptomId}`);\r\n    }\r\n    \r\n    // Segna come letta\r\n    markAsRead(id);\r\n  };\r\n  \r\n  const dismissNotification = (id) => {\r\n    setNotifications(prev => \r\n      prev.filter(notification => notification.id !== id)\r\n    );\r\n  };\r\n  \r\n  const skipMedication = (id, data) => {\r\n    // Qui chiamata API a /medications/skip\r\n    setNotifications(prev => \r\n      prev.filter(notification => notification.id !== id)\r\n    );\r\n  };\r\n  \r\n  const openRescheduleModal = (id, data) => {\r\n    // Qui apriremmo un modal per la riprogrammazione\r\n    console.log(`Apri modal riprogrammazione per ${id}`);\r\n    // Per ora segniamo solo come letta\r\n    markAsRead(id);\r\n  };\r\n  \r\n  const markAsRead = (id) => {\r\n    setNotifications(prev => \r\n      prev.map(notification => \r\n        notification.id === id \r\n          ? { ...notification, unread: false } \r\n          : notification\r\n      )\r\n    );\r\n  };\r\n\r\n  // Segna tutte le notifiche come lette\r\n  const markAllAsRead = () => {\r\n    setNotifications(prev => \r\n      prev.map(notification => ({ ...notification, unread: false }))\r\n    );\r\n  };\r\n  \r\n  // Filtra notifiche per categoria\r\n  const filteredNotifications = activeCategory === 'all'\r\n    ? notifications\r\n    : notifications.filter(notification => notification.category === activeCategory);\r\n  \r\n  // Ordina notifiche per priorità e poi per data (più recenti prima)\r\n  const sortedNotifications = [...filteredNotifications].sort((a, b) => {\r\n    // Prima per priorità (high > medium > low)\r\n    const priorityOrder = { high: 3, medium: 2, low: 1 };\r\n    const priorityDiff = priorityOrder[b.priority] - priorityOrder[a.priority];\r\n    \r\n    if (priorityDiff !== 0) return priorityDiff;\r\n    \r\n    // Poi per data (più recenti prima)\r\n    return b.timestamp - a.timestamp;\r\n  });\r\n  \r\n  // Formatta il timestamp in modo relativo e leggibile\r\n  const formatRelativeTime = (timestamp) => {\r\n    const now = new Date();\r\n    const diffMs = now - timestamp;\r\n    const diffMin = Math.floor(diffMs / 60000);\r\n    const diffHours = Math.floor(diffMs / 3600000);\r\n    const diffDays = Math.floor(diffMs / 86400000);\r\n    \r\n    if (diffMin < 1) return t('now', 'timeLabels');\r\n    if (diffMin < 60) return `${diffMin} ${t('minutesAgo', 'timeLabels')}`;\r\n    if (diffHours < 24) return `${diffHours} ${t('hoursAgo', 'timeLabels')}`;\r\n    if (diffDays === 1) return t('yesterday', 'timeLabels');\r\n    if (diffDays < 7) return `${diffDays} ${t('daysAgo', 'timeLabels')}`;\r\n    \r\n    // Se più vecchio di 7 giorni, mostra la data\r\n    return timestamp.toLocaleDateString();\r\n  };\r\n\r\n  // Se il centro notifiche non è aperto, non renderizziamo nulla\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"notification-overlay\" onClick={onClose}>\r\n      <div className=\"notification-panel\" onClick={e => e.stopPropagation()}>\r\n        <div className=\"notification-header\">\r\n          <h2 className=\"notification-title\">{t('title')}</h2>\r\n          <button className=\"notification-close\" onClick={onClose}>\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Categorie di notifiche */}\r\n        <div className=\"notification-categories\">\r\n          <button \r\n            className={`category-chip ${activeCategory === 'all' ? 'active' : ''}`}\r\n            onClick={() => setActiveCategory('all')}\r\n          >\r\n            <i className=\"fas fa-bell\"></i> {t('all', 'categories')}\r\n          </button>\r\n          <button \r\n            className={`category-chip ${activeCategory === 'urgent' ? 'active' : ''}`}\r\n            onClick={() => setActiveCategory('urgent')}\r\n          >\r\n            <i className=\"fas fa-exclamation-triangle\"></i> {t('urgent', 'categories')}\r\n            {notifications.filter(n => n.category === 'urgent' && n.unread).length > 0 && (\r\n              <span className=\"category-badge\">\r\n                {notifications.filter(n => n.category === 'urgent' && n.unread).length}\r\n              </span>\r\n            )}\r\n          </button>\r\n          <button \r\n            className={`category-chip ${activeCategory === 'medication' ? 'active' : ''}`}\r\n            onClick={() => setActiveCategory('medication')}\r\n          >\r\n            <i className=\"fas fa-pills\"></i> {t('medication', 'categories')}\r\n            {notifications.filter(n => n.category === 'medication' && n.unread).length > 0 && (\r\n              <span className=\"category-badge\">\r\n                {notifications.filter(n => n.category === 'medication' && n.unread).length}\r\n              </span>\r\n            )}\r\n          </button>\r\n          <button \r\n            className={`category-chip ${activeCategory === 'appointment' ? 'active' : ''}`}\r\n            onClick={() => setActiveCategory('appointment')}\r\n          >\r\n            <i className=\"fas fa-calendar-alt\"></i> {t('appointment', 'categories')}\r\n            {notifications.filter(n => n.category === 'appointment' && n.unread).length > 0 && (\r\n              <span className=\"category-badge\">\r\n                {notifications.filter(n => n.category === 'appointment' && n.unread).length}\r\n              </span>\r\n            )}\r\n          </button>\r\n          <button \r\n            className={`category-chip ${activeCategory === 'wellness' ? 'active' : ''}`}\r\n            onClick={() => setActiveCategory('wellness')}\r\n          >\r\n            <i className=\"fas fa-spa\"></i> {t('wellness', 'categories')}\r\n            {notifications.filter(n => n.category === 'wellness' && n.unread).length > 0 && (\r\n              <span className=\"category-badge\">\r\n                {notifications.filter(n => n.category === 'wellness' && n.unread).length}\r\n              </span>\r\n            )}\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Lista notifiche */}\r\n        <div className=\"notification-list\">\r\n          {isLoading ? (\r\n            <div className=\"notification-loading\">\r\n              <div className=\"notification-spinner\"></div>\r\n              <p>Caricamento notifiche...</p>\r\n            </div>\r\n          ) : sortedNotifications.length === 0 ? (\r\n            <div className=\"notification-empty\">\r\n              <i className=\"fas fa-bell-slash\"></i>\r\n              <p>{t('noNotifications')}</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* Pulsante Segna tutte come lette */}\r\n              {sortedNotifications.some(n => n.unread) && (\r\n                <div className=\"notification-actions\">\r\n                  <button className=\"btn-text\" onClick={markAllAsRead}>\r\n                    <i className=\"fas fa-check-double\"></i> {t('markAllRead')}\r\n                  </button>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Elenco notifiche */}\r\n              {sortedNotifications.map(notification => (\r\n                <div \r\n                  key={notification.id} \r\n                  className={`notification-item ${notification.unread ? 'unread' : ''}`}\r\n                  onClick={() => markAsRead(notification.id)}\r\n                >\r\n                  {/* Indicatore priorità */}\r\n                  <div className={`priority-indicator priority-${notification.priority}`}></div>\r\n                  \r\n                  {/* Icona notifica */}\r\n                  <div className=\"notification-icon\" style={{ backgroundColor: notification.color }}>\r\n                    <i className={`fas fa-${notification.icon}`}></i>\r\n                  </div>\r\n                  \r\n                  {/* Contenuto notifica */}\r\n                  <div className=\"notification-content\">\r\n                    <div className=\"notification-header-row\">\r\n                      <h3 className=\"notification-item-title\">{notification.title}</h3>\r\n                      <span className=\"notification-time\">\r\n                        {formatRelativeTime(notification.timestamp)}\r\n                      </span>\r\n                    </div>\r\n                    <p className=\"notification-description\">{notification.description}</p>\r\n                    \r\n                    {/* Pulsanti azione */}\r\n                    <div className=\"notification-actions\">\r\n                      {notification.actions.map((action, index) => (\r\n                        <button \r\n                          key={index}\r\n                          className={`btn-action btn-action-${action.type}`}\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleNotificationAction(notification.id, action.type, notification.data);\r\n                          }}\r\n                        >\r\n                          {action.label}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotificationCenter; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}